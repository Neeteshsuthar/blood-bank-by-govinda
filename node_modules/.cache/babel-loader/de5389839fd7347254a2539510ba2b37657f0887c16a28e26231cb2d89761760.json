{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\n// import { auth, db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import { Helmet } from \"react-helmet\";\n// import \"../styles/home.css\";\n// import { signOut } from \"firebase/auth\";\n\n// const HomePage = () => {\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [age, setAge] = useState(\"\");\n//   const [ContactNo, setContactNo] = useState(\"\");\n//   const [donors, setDonors] = useState([]);\n//   const DonateButton = async () => {\n//     if (!name || !bloodGroup || !city || !ContactNo) {\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\n//       return;\n//     }\n\n//     try {\n//       await addDoc(collection(db, \"BloodDoners\"), {\n//         DonerName: name,\n//         DonerBloodGroup: bloodGroup,\n//         CityName: city,\n//         ContactNo: ContactNo,\n//       });\n\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\n//       setName(\"\");\n//       setBloodGroup(\"\");\n//       setCity(\"\");\n//       setContactNo(\"\");\n//     } catch (error) {\n//       console.error(\"Error donating blood:\", error.message);\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\n//     }\n//   };\n//     const FindDoner = async () => {\n//     if (!bloodGroup || !city) {\n//       Swal.fire(\"Please add both city and blood group\");\n//       return;\n//     }\n\n//     try {\n//       const filters = [];\n//       if (bloodGroup) {\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n//       }\n//       if (city) {\n//      filters.push(where(\"CityName\", \"==\", city));\n//       }\n\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n//       const querySnapshot = await getDocs(matchData);\n\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\n//         id: doc.id,\n//         DonerName: doc.data().DonerName,\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\n//         CityName: doc.data().CityName,\n//         ContactNo: doc.data().ContactNo,\n//       }));\n\n//       if (matchedDonors.length === 0) {\n//         Swal.fire(\"No donors found matching your criteria.\");\n//       } else {\n//         setDonors(matchedDonors);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching donors:\", error);\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n//     }\n//   };\n\n//   // Logout Function\n//   const LogOut = async () => {\n//     try {\n//       await signOut(auth);\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Error during logout:\", error);\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"homepage\">\n//       <Helmet>\n//         <title>HomePage</title>\n//       </Helmet>\n//       <div className=\"navbar\">\n//         <div className=\"navbar-brand\">Blood Bank</div>\n//         <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\n//           <span></span>\n//           <span></span>\n//           <span></span>\n//         </div>\n//         <div className=\"navbar-links\">\n//           <a href=\"/home\">Home</a>\n//           <a href=\"/profile\">Profile</a>\n//           <button onClick={LogOut}>Logout</button>\n//           <a href=\"/contact\">Contact Us</a>\n//         </div>\n//       </div>\n\n//       <h1 className=\"title\">Blood Bank</h1>\n//       <div className=\"form-container\">\n//         <input\n//           type=\"text\" placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)}  />\n//         <input type=\"number\"  placeholder=\"Enter Your Age\" value={age} onChange={(e) => setAge(e.target.value)} />\n//         <input  type=\"text\" placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)} />\n//         <input  type=\"text\" placeholder=\"Enter City\" value={city} onChange={(e) => setCity(e.target.value)} />\n//         <input type=\"text\" placeholder=\"Enter Contact NO\"value={ContactNo}onChange={(e) => setContactNo(e.target.value)} />\n//           <div className=\"button-group\">\n//           <button onClick={DonateButton} className=\"btn donate-btn\">\n//             Donate Blood\n//           </button>\n//           <button onClick={FindDoner} className=\"btn find-btn\">\n//             Find Donor\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"donor-list\">\n//         <h2>Donor List</h2>\n//         {donors.length > 0 ? (\n//           donors.map((donor, index) => (\n//             <div key={index} className=\"donor-card\">\n//               <p>\n//                 <strong>Name:</strong> {donor.DonerName} </p>\n//               <p><strong>Blood Group:</strong> {donor.DonerBloodGroup} </p>\n//               <p><strong>City:</strong> {donor.CityName} </p>\n//               <p><strong>Contact No:</strong> {donor.ContactNo}</p>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No donors found</p>\n//         )}\n//       </div>\n//       <footer className=\"footer\">\n//         <div className=\"footer-container\">\n//           <p>&copy; {new Date().getFullYear()} Blood Bank | All Rights Reserved</p>\n//           <p>\n//           </p>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { auth, db } from \"../init-firebase\";\nimport Swal from \"sweetalert2\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [ContactNo, setContactNo] = useState(\"\");\n  const [donors, setDonors] = useState([]);\n\n  // Function to add a donor to Firestore\n  const AddDonate = async donateGroups => {\n    onAuthStateChanged(auth, async user => {\n      if (user) {\n        const currentProfileUser = user.email;\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        querySnapshot.forEach(async doc => {\n          const userData = doc.data();\n          if (currentProfileUser === userData.UserEmail) {\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\n            const donorSnapshot = await getDocs(q);\n            if (donorSnapshot.empty) {\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\n                Swal.fire(\"Please Select Your Blood Group!\", \"\");\n              } else {\n                try {\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\n                    Name: userData.Name,\n                    Email: userData.Email,\n                    PhoneNo: userData.PhoneNo,\n                    Age: userData.Age,\n                    UserType: userData.UserType,\n                    City: userData.City,\n                    ImageUrl: userData.ImageUrl,\n                    BloodGroup: donateGroups\n                  });\n                  Swal.fire(\"Thank you for becoming a donor!\");\n                } catch (e) {\n                  console.error(\"Error adding document: \", e);\n                }\n              }\n            } else {\n              Swal.fire(\"You're Already a Donor!\", \"\");\n            }\n          }\n        });\n      } else {\n        console.log(\"User Not Logged In, Please Log In!\");\n      }\n    });\n  };\n\n  // Function to handle the donate button click\n  const DonateButton = async () => {\n    if (!name || !bloodGroup || !city || !ContactNo) {\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\n      return;\n    }\n\n    // Use AddDonate function to add the donor to the Firestore collection\n    AddDonate(bloodGroup);\n    try {\n      await addDoc(collection(db, \"BloodDoners\"), {\n        DonerName: name,\n        DonerBloodGroup: bloodGroup,\n        CityName: city,\n        ContactNo: ContactNo\n      });\n      Swal.fire(`Thank you ${name} for your blood donation!`);\n      setName(\"\");\n      setBloodGroup(\"\");\n      setCity(\"\");\n      setContactNo(\"\");\n    } catch (error) {\n      console.error(\"Error donating blood:\", error.message);\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\n    }\n  };\n\n  // Function to find a donor\n  const FindDoner = async () => {\n    if (!bloodGroup || !city) {\n      Swal.fire(\"Please add both city and blood group\");\n      return;\n    }\n    try {\n      const filters = [];\n      if (bloodGroup) {\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n      }\n      if (city) {\n        filters.push(where(\"CityName\", \"==\", city));\n      }\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n      const querySnapshot = await getDocs(matchData);\n      const matchedDonors = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        DonerName: doc.data().DonerName,\n        DonerBloodGroup: doc.data().DonerBloodGroup,\n        CityName: doc.data().CityName,\n        ContactNo: doc.data().ContactNo\n      }));\n      if (matchedDonors.length === 0) {\n        Swal.fire(\"No donors found matching your criteria.\");\n      } else {\n        setDonors(matchedDonors);\n      }\n    } catch (error) {\n      console.error(\"Error fetching donors:\", error);\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n    }\n  };\n\n  // LogOut Function\n  const LogOut = async () => {\n    try {\n      await signOut(auth);\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Blood Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Your Age\",\n        value: age,\n        onChange: e => setAge(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Blood Group\",\n        value: bloodGroup,\n        onChange: e => setBloodGroup(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Contact NO\",\n        value: ContactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: DonateButton,\n          className: \"btn donate-btn\",\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: FindDoner,\n          className: \"btn find-btn\",\n          children: \"Find Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donor-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Donor List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), donors.length > 0 ? donors.map((donor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donor-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), \" \", donor.DonerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Group:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), \" \", donor.DonerBloodGroup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), \" \", donor.CityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), \" \", donor.ContactNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donors found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"K3a5V80S5fnStqqhClu1oniPjpA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","query","where","auth","db","Swal","onAuthStateChanged","signOut","jsxDEV","_jsxDEV","HomePage","_s","bloodGroup","setBloodGroup","city","setCity","name","setName","age","setAge","ContactNo","setContactNo","donors","setDonors","AddDonate","donateGroups","user","currentProfileUser","email","querySnapshot","forEach","doc","userData","data","UserEmail","q","Email","donorSnapshot","empty","fire","docRef","Name","PhoneNo","Age","UserType","City","ImageUrl","BloodGroup","e","console","error","log","DonateButton","DonerName","DonerBloodGroup","CityName","message","FindDoner","filters","push","matchData","matchedDonors","docs","map","id","length","LogOut","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","donor","index","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n// import { auth, db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import \"../styles/home.css\";\r\n// import { signOut } from \"firebase/auth\";\r\n\r\n// const HomePage = () => {\r\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [age, setAge] = useState(\"\");\r\n//   const [ContactNo, setContactNo] = useState(\"\");\r\n//   const [donors, setDonors] = useState([]);\r\n//   const DonateButton = async () => {\r\n//     if (!name || !bloodGroup || !city || !ContactNo) {\r\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await addDoc(collection(db, \"BloodDoners\"), {\r\n//         DonerName: name,\r\n//         DonerBloodGroup: bloodGroup,\r\n//         CityName: city,\r\n//         ContactNo: ContactNo,\r\n//       });\r\n\r\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\r\n//       setName(\"\");\r\n//       setBloodGroup(\"\");\r\n//       setCity(\"\");\r\n//       setContactNo(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error donating blood:\", error.message);\r\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n//     }\r\n//   };\r\n//     const FindDoner = async () => {\r\n//     if (!bloodGroup || !city) {\r\n//       Swal.fire(\"Please add both city and blood group\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const filters = [];\r\n//       if (bloodGroup) {\r\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n//       }\r\n//       if (city) {\r\n//      filters.push(where(\"CityName\", \"==\", city));\r\n//       }\r\n\r\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n//       const querySnapshot = await getDocs(matchData);\r\n\r\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         DonerName: doc.data().DonerName,\r\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\r\n//         CityName: doc.data().CityName,\r\n//         ContactNo: doc.data().ContactNo,\r\n//       }));\r\n\r\n//       if (matchedDonors.length === 0) {\r\n//         Swal.fire(\"No donors found matching your criteria.\");\r\n//       } else {\r\n//         setDonors(matchedDonors);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching donors:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   // Logout Function\r\n//   const LogOut = async () => {\r\n//     try {\r\n//       await signOut(auth);\r\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Error during logout:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"homepage\">\r\n//       <Helmet>\r\n//         <title>HomePage</title>\r\n//       </Helmet>\r\n//       <div className=\"navbar\">\r\n//         <div className=\"navbar-brand\">Blood Bank</div>\r\n//         <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\r\n//           <span></span>\r\n//           <span></span>\r\n//           <span></span>\r\n//         </div>\r\n//         <div className=\"navbar-links\">\r\n//           <a href=\"/home\">Home</a>\r\n//           <a href=\"/profile\">Profile</a>\r\n//           <button onClick={LogOut}>Logout</button>\r\n//           <a href=\"/contact\">Contact Us</a>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <h1 className=\"title\">Blood Bank</h1>\r\n//       <div className=\"form-container\">\r\n//         <input\r\n//           type=\"text\" placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)}  />\r\n//         <input type=\"number\"  placeholder=\"Enter Your Age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n//         <input  type=\"text\" placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)} />\r\n//         <input  type=\"text\" placeholder=\"Enter City\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n//         <input type=\"text\" placeholder=\"Enter Contact NO\"value={ContactNo}onChange={(e) => setContactNo(e.target.value)} />\r\n//           <div className=\"button-group\">\r\n//           <button onClick={DonateButton} className=\"btn donate-btn\">\r\n//             Donate Blood\r\n//           </button>\r\n//           <button onClick={FindDoner} className=\"btn find-btn\">\r\n//             Find Donor\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"donor-list\">\r\n//         <h2>Donor List</h2>\r\n//         {donors.length > 0 ? (\r\n//           donors.map((donor, index) => (\r\n//             <div key={index} className=\"donor-card\">\r\n//               <p>\r\n//                 <strong>Name:</strong> {donor.DonerName} </p>\r\n//               <p><strong>Blood Group:</strong> {donor.DonerBloodGroup} </p>\r\n//               <p><strong>City:</strong> {donor.CityName} </p>\r\n//               <p><strong>Contact No:</strong> {donor.ContactNo}</p>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p>No donors found</p>\r\n//         )}\r\n//       </div>\r\n//       <footer className=\"footer\">\r\n//         <div className=\"footer-container\">\r\n//           <p>&copy; {new Date().getFullYear()} Blood Bank | All Rights Reserved</p>\r\n//           <p>\r\n//           </p>\r\n//         </div>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"../init-firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\nconst HomePage = () => {\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [ContactNo, setContactNo] = useState(\"\");\r\n  const [donors, setDonors] = useState([]);\r\n\r\n  // Function to add a donor to Firestore\r\n  const AddDonate = async (donateGroups) => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        const currentProfileUser = user.email;\r\n\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        querySnapshot.forEach(async (doc) => {\r\n        const userData = doc.data();\r\n\r\n          if (currentProfileUser === userData.UserEmail) {\r\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\r\n            const donorSnapshot = await getDocs(q);\r\n\r\n            if (donorSnapshot.empty) {\r\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\r\n                Swal.fire(\"Please Select Your Blood Group!\", \"\");\r\n              } else {\r\n                try {\r\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\r\n                    Name: userData.Name,\r\n                    Email: userData.Email,\r\n                    PhoneNo: userData.PhoneNo,\r\n                    Age: userData.Age,\r\n                    UserType: userData.UserType,\r\n                    City: userData.City,\r\n                    ImageUrl: userData.ImageUrl,\r\n                    BloodGroup: donateGroups,\r\n                  });\r\n                  Swal.fire(\"Thank you for becoming a donor!\");\r\n                } catch (e) {\r\n                  console.error(\"Error adding document: \", e);\r\n                }\r\n              }\r\n            } else {\r\n              Swal.fire(\"You're Already a Donor!\", \"\");\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"User Not Logged In, Please Log In!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to handle the donate button click\r\n  const DonateButton = async () => {\r\n    if (!name || !bloodGroup || !city || !ContactNo) {\r\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n      return;\r\n    }\r\n\r\n    // Use AddDonate function to add the donor to the Firestore collection\r\n    AddDonate(bloodGroup);\r\n\r\n    try {\r\n      await addDoc(collection(db, \"BloodDoners\"), {\r\n        DonerName: name,\r\n        DonerBloodGroup: bloodGroup,\r\n        CityName: city,\r\n        ContactNo: ContactNo,\r\n      });\r\n\r\n      Swal.fire(`Thank you ${name} for your blood donation!`);\r\n      setName(\"\");\r\n      setBloodGroup(\"\");\r\n      setCity(\"\");\r\n      setContactNo(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error donating blood:\", error.message);\r\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Function to find a donor\r\n  const FindDoner = async () => {\r\n    if (!bloodGroup || !city) {\r\n      Swal.fire(\"Please add both city and blood group\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const filters = [];\r\n      if (bloodGroup) {\r\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n      }\r\n      if (city) {\r\n        filters.push(where(\"CityName\", \"==\", city));\r\n      }\r\n\r\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n      const querySnapshot = await getDocs(matchData);\r\n\r\n      const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        DonerName: doc.data().DonerName,\r\n        DonerBloodGroup: doc.data().DonerBloodGroup,\r\n        CityName: doc.data().CityName,\r\n        ContactNo: doc.data().ContactNo,\r\n      }));\r\n\r\n      if (matchedDonors.length === 0) {\r\n        Swal.fire(\"No donors found matching your criteria.\");\r\n      } else {\r\n        setDonors(matchedDonors);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors:\", error);\r\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n    }\r\n  };\r\n\r\n  // LogOut Function\r\n  const LogOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n      window.location.href = \"/login\";\r\n    } catch (error) {\r\n      console.error(\"Error during logout:\", error);\r\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h1 className=\"title\">Blood Bank</h1>\r\n      <div className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter Your Age\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Blood Group\"\r\n          value={bloodGroup}\r\n          onChange={(e) => setBloodGroup(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter City\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Contact NO\"\r\n          value={ContactNo}\r\n          onChange={(e) => setContactNo(e.target.value)}\r\n        />\r\n\r\n        <div className=\"button-group\">\r\n          <button onClick={DonateButton} className=\"btn donate-btn\">\r\n            Donate Blood\r\n          </button>\r\n          <button onClick={FindDoner} className=\"btn find-btn\">\r\n            Find Donor\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Displaying Donors */}\r\n      <div className=\"donor-list\">\r\n        <h2>Donor List</h2>\r\n        {donors.length > 0 ? (\r\n          donors.map((donor, index) => (\r\n            <div key={index} className=\"donor-card\">\r\n              <p>\r\n                <strong>Name:</strong> {donor.DonerName}\r\n              </p>\r\n              <p>\r\n                <strong>Blood Group:</strong> {donor.DonerBloodGroup}\r\n              </p>\r\n              <p>\r\n                <strong>City:</strong> {donor.CityName}\r\n              </p>\r\n              <p>\r\n                <strong>Contact No:</strong> {donor.ContactNo}\r\n              </p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No donors found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAC9E,SAASC,IAAI,EAAEC,EAAE,QAAQ,kBAAkB;AAC3C,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}