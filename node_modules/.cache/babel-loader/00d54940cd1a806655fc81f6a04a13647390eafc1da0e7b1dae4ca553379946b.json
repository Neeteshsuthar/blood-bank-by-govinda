{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\",\n  _s = $RefreshSig$();\nimport Swal from \"sweetalert2\";\nimport React from \"react\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\nimport Mycontext from \"./Mycontext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateProfile } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  _s();\n  const Navigate = useNavigate();\n  const SignupFirebase = async (name, email, password, doners, Age, Contact) => {\n    if (name && email && password) {\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed up \n        const user = userCredential.user;\n        updateProfile(auth.currentUser, {\n          displayName: name\n        });\n        setDoc(doc(db, \"SinupUser\", user.uid), {\n          Name: name,\n          UserEmail: email,\n          UserPassword: password,\n          Who: doners,\n          UserAge: Age,\n          Contact: Contact,\n          hasDonated: false\n        });\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\n        console.log(\"User saved to Firestore:\", user);\n        Navigate('/login');\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"Error signing up:\", errorCode, errorMessage);\n        Swal.fire(\"Error signing up. Please try again.\");\n      });\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // SignIn Exist User\n\n  const SignInfirebase = async (email, password) => {\n    if (email && password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\n        console.log(\"Signed in user:\", user);\n        Navigate('/home');\n        setDoc(doc(db, \"siginnInUser\", user.uid), {\n          userEmail: email,\n          userPassword: password\n        });\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n        Swal.fire(\"Error signing In. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // Forget Password Function\n  const ForgetPassword = async email => {\n    if (email) {\n      try {\n        await sendPasswordResetEmail(auth, email);\n        Swal.fire(\"Password reset email sent successfully!\");\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Swal.fire(\"Error resetting password. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please provide your email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Myprovider, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","React","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","addDoc","doc","setDoc","Mycontext","useNavigate","updateProfile","jsxDEV","_jsxDEV","Myprovider","children","_s","Navigate","SignupFirebase","name","email","password","doners","Age","Contact","then","userCredential","user","currentUser","displayName","uid","Name","UserEmail","UserPassword","Who","UserAge","hasDonated","fire","console","log","catch","error","errorCode","code","errorMessage","message","SignInfirebase","userEmail","userPassword","ForgetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport {useNavigate } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\n      const Myprovider = ({ children }) => {\r\n         const Navigate=useNavigate()\r\n         const SignupFirebase = async (name, email, password,doners,Age,Contact) => {\r\n         if (name && email && password) {\r\n         createUserWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n        // Signed up \r\n        const user = userCredential.user;\r\n        updateProfile(auth.currentUser, {\r\n          displayName: name,\r\n        })\r\n        setDoc(doc(db, \"SinupUser\", user.uid),\r\n        {\r\n          Name:name,UserEmail:email,UserPassword:password,Who:doners,UserAge:Age,Contact:Contact,hasDonated:false,\r\n        })\r\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\r\n        console.log(\"User saved to Firestore:\", user);\r\n        Navigate('/login')\r\n       }) \r\n    .catch((error) => {\r\n     const errorCode = error.code;\r\n     const errorMessage = error.message;\r\n     console.log(\"Error signing up:\", errorCode,errorMessage);\r\n     Swal.fire(\"Error signing up. Please try again.\");\r\n  });\r\n  \r\n  }else{\r\n  Swal.fire(\"Please fill all fields.\");\r\n}\r\n  };\r\n  // SignIn Exist User\r\n\r\n     const SignInfirebase = async (email, password) => {\r\n     if (email && password) {\r\n        try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\r\n        console.log(\"Signed in user:\", user); \r\n        Navigate('/home')\r\n       setDoc(doc(db,\"siginnInUser\",user.uid),{\r\n        userEmail:email,userPassword:password\r\n       })\r\n        } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        Swal.fire(\"Error signing In. Please try again.\");\r\n       \r\n       \r\n      }\r\n      } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n         // Forget Password Function\r\n         const ForgetPassword = async (email) => {\r\n         if (email) {\r\n        try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n        } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n        }\r\n        } else {\r\n        Swal.fire(\"Please provide your email.\");\r\n     }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase, ForgetPassword}}>\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}