{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\",\n  _s2 = $RefreshSig$();\nimport Swal from \"sweetalert2\";\nimport React from \"react\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\nimport Mycontext from \"./Mycontext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateProfile } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const Navigate = useNavigate();\n  const SignupFirebase = async (name, email, password, doners) => {\n    if (name && email && password) {\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed up \n        const user = userCredential.user;\n        updateProfile(auth.currentUser, {\n          displayName: name\n        });\n        setDoc(doc(db, \"SinupUser\", user.uid), {\n          Name: name,\n          UserEmail: email,\n          UserPassword: password,\n          Who: doners\n        });\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\n        console.log(\"User saved to Firestore:\", user);\n        Navigate('/login');\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"Error signing up:\", errorCode, errorMessage);\n        Swal.fire(\"Error signing up. Please try again.\");\n      });\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // SignIn Exist User\n\n  const SignInfirebase = async (email, password) => {\n    _s();\n    const navigate = useNavigate(); // Ensure useNavigate is properly initialized\n\n    if (email && password) {\n      try {\n        // Authenticate the user with Firebase Authentication\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\n        console.log(\"Signed in user:\", user);\n\n        // Save user information to Firestore (avoiding storing the password)\n        await setDoc(doc(db, \"signinInUser\", user.uid), {\n          userEmail: email,\n          signedInAt: new Date().toISOString() // Optionally record timestamp\n        });\n\n        // Navigate to the home page\n        navigate(\"/home\");\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n\n        // Show a user-friendly error message\n        Swal.fire({\n          title: \"Error signing in\",\n          text: error.message,\n          icon: \"error\"\n        });\n      }\n    } else {\n      Swal.fire(\"Please fill in both email and password.\");\n    }\n  };\n  _s(SignInfirebase, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const ForgetPassword = async email => {\n    if (email) {\n      try {\n        await sendPasswordResetEmail(auth, email);\n        Swal.fire(\"Password reset email sent successfully!\");\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Swal.fire(\"Error resetting password. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please provide your email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(Myprovider, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","React","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","addDoc","doc","setDoc","Mycontext","useNavigate","updateProfile","jsxDEV","_jsxDEV","Myprovider","children","_s2","_s","$RefreshSig$","Navigate","SignupFirebase","name","email","password","doners","then","userCredential","user","currentUser","displayName","uid","Name","UserEmail","UserPassword","Who","fire","console","log","catch","error","errorCode","code","errorMessage","message","SignInfirebase","navigate","userEmail","signedInAt","Date","toISOString","title","text","icon","ForgetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport {useNavigate } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\n      const Myprovider = ({ children }) => {\r\n         const Navigate=useNavigate()\r\n         const SignupFirebase = async (name, email, password,doners,) => {\r\n         if (name && email && password) {\r\n         createUserWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n        // Signed up \r\n        const user = userCredential.user;\r\n        updateProfile(auth.currentUser, {\r\n          displayName: name,\r\n        })\r\n        setDoc(doc(db, \"SinupUser\", user.uid),\r\n        {\r\n          Name:name,UserEmail:email,UserPassword:password,Who:doners\r\n        })\r\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\r\n        console.log(\"User saved to Firestore:\", user);\r\n        Navigate('/login')\r\n       }) \r\n    .catch((error) => {\r\n     const errorCode = error.code;\r\n     const errorMessage = error.message;\r\n     console.log(\"Error signing up:\", errorCode,errorMessage);\r\n     Swal.fire(\"Error signing up. Please try again.\");\r\n  });\r\n  \r\n  }else{\r\n  Swal.fire(\"Please fill all fields.\");\r\n}\r\n  };\r\n  // SignIn Exist User\r\n\r\n  const SignInfirebase = async (email, password) => {\r\n    const navigate = useNavigate(); // Ensure useNavigate is properly initialized\r\n  \r\n    if (email && password) {\r\n      try {\r\n        // Authenticate the user with Firebase Authentication\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n  \r\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\r\n        console.log(\"Signed in user:\", user);\r\n  \r\n        // Save user information to Firestore (avoiding storing the password)\r\n        await setDoc(doc(db, \"signinInUser\", user.uid), {\r\n          userEmail: email,\r\n          signedInAt: new Date().toISOString(), // Optionally record timestamp\r\n        });\r\n  \r\n        // Navigate to the home page\r\n        navigate(\"/home\");\r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n  \r\n        // Show a user-friendly error message\r\n        Swal.fire({\r\n          title: \"Error signing in\",\r\n          text: error.message,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please fill in both email and password.\");\r\n    }\r\n  };\r\n      \r\n  const ForgetPassword = async (email) => {\r\n         if (email) {\r\n        try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n        } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n        }\r\n        } else {\r\n        Swal.fire(\"Please provide your email.\");\r\n     }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase, ForgetPassword}}>\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}