{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\";\nimport Swal from \"sweetalert2\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport Mycontext from \"./Mycontext\";\nimport React from \"react\";\ndb;\nimport { ref, set, get, update, remove } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  //  const Navigate=useNavigate()  ;Swal.fire(\"Please fill all fields.\");\n  const SignupFirebase = (name, email, password) => {\n    if (name && email && password) {\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed up \n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, good job!\");\n        console.log(user);\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        Swal.fire(\"Error signing up. Please try again.\");\n        console.log(errorCode + errorMessage);\n      });\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  const SignInfirebase = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      console.log(user);\n      Swal.fire(\"Wow brother, Great!\");\n\n      // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode + errorMessage);\n      Swal.fire(\"Error signing In. Please try again.\");\n    });\n  };\n  const ForgetPassword = email => {\n    sendPasswordResetEmail(auth, email).then(() => {\n      Swal.fire(\"Wow brother, Great!\");\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      Swal.fire(errorCode + errorMessage);\n    });\n  };\n  // Is man hum data ko firebase man bina refresh kia add kr payengy\n  const addUser = async (userId, name, email) => {\n    await set(ref(db, 'users/' + userId), {\n      name,\n      email\n    });\n  };\n\n  // Is man Hum Data ko Update kreengy\n\n  // Is man Hum Jo data add ki thi wo Delete kr payengy\n\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword,\n      addUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","Mycontext","React","ref","set","get","update","remove","jsxDEV","_jsxDEV","Myprovider","children","SignupFirebase","name","email","password","then","userCredential","user","fire","console","log","catch","error","errorCode","code","errorMessage","message","SignInfirebase","ForgetPassword","addUser","userId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { auth,createUserWithEmailAndPassword,signInWithEmailAndPassword,sendPasswordResetEmail, db  } from \"../init-firebase\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport React from \"react\"\r\ndb\r\nimport { ref, set, get, update, remove } from \"firebase/database\";\r\nconst Myprovider=({children})=>{\r\n  //  const Navigate=useNavigate()  ;Swal.fire(\"Please fill all fields.\");\r\n    const SignupFirebase=(name,email,password)=>{\r\n\r\n if (name && email && password) {\r\n  createUserWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed up \r\n    const user = userCredential.user;\r\n    Swal.fire(\"Wow brother, good job!\");\r\n   console.log(user)\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    Swal.fire(\"Error signing up. Please try again.\")\r\n    console.log(errorCode+errorMessage)\r\n   \r\n  });\r\n      \r\n    } else{\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n      \r\n  }\r\n    const SignInfirebase=(email,password)=>{\r\n        signInWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n    console.log(user)\r\n    Swal.fire(\"Wow brother, Great!\");\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    console.log(errorCode+errorMessage)\r\n    Swal.fire(\"Error signing In. Please try again.\");\r\n  });\r\n\r\n    }\r\n\r\n    const ForgetPassword=(email)=>{\r\n      sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        Swal.fire(\"Wow brother, Great!\");\r\n\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        Swal.fire(errorCode+errorMessage);\r\n      });\r\n\r\n    }\r\n    // Is man hum data ko firebase man bina refresh kia add kr payengy\r\n  const addUser = async (userId, name, email) => {\r\n    await set(ref(db, 'users/' + userId), {\r\n        name,\r\n        email,\r\n    });\r\n};\r\n\r\n   \r\n// Is man Hum Data ko Update kreengy\r\n \r\n// Is man Hum Jo data add ki thi wo Delete kr payengy\r\n\r\n    return(\r\n        <Mycontext.Provider value={{SignupFirebase,SignInfirebase,ForgetPassword,addUser,}}>\r\n            {children}\r\n        </Mycontext.Provider>\r\n    )\r\n}\r\n\r\nexport default Myprovider"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}