{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\ome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { db, collection, getDocs } from \"../init-firebase\"; // Modular Firebase import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonersData = () => {\n  _s();\n  const [doners, setDoners] = useState([]); // State to store donors\n  const [loading, setLoading] = useState(false); // Loading state to show when data is being fetched\n  const [showDonors, setShowDonors] = useState(false); // To track when to show donor data\n\n  // Function to fetch donors when button is clicked\n  const fetchDonors = async () => {\n    setLoading(true); // Start loading\n    setShowDonors(true); // Show donor list after fetching\n\n    try {\n      const donorCollection = collection(db, \"donors\"); // Reference to donors collection\n      const donorSnapshot = await getDocs(donorCollection); // Get donor data\n      const donorList = donorSnapshot.docs.map(doc => doc.data()); // Map through the docs to get data\n      setDoners(donorList); // Set the fetched donor data to state\n    } catch (error) {\n      console.error(\"Error fetching donors: \", error);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blood Donor List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDonors,\n      children: \"Donate Blood (Click to fetch Donors)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading donors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), doners.length === 0 && !loading && showDonors && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No donors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 57\n    }, this), doners.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: doners.map((doner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doner\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", doner.Name || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", doner.Age || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact Number: \", doner.ContactNumber || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Blood Group: \", doner.BloodGroup || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(DonersData, \"AQOvUbGumPcyx2PYMY+i/OIP2SE=\");\n_c = DonersData;\nexport default DonersData;\nvar _c;\n$RefreshReg$(_c, \"DonersData\");","map":{"version":3,"names":["React","useState","db","collection","getDocs","jsxDEV","_jsxDEV","DonersData","_s","doners","setDoners","loading","setLoading","showDonors","setShowDonors","fetchDonors","donorCollection","donorSnapshot","donorList","docs","map","doc","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","doner","index","className","style","marginBottom","Name","Age","ContactNumber","BloodGroup","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/ome.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { db, collection, getDocs } from \"../init-firebase\"; // Modular Firebase import\r\n\r\nconst DonersData = () => {\r\n  const [doners, setDoners] = useState([]); // State to store donors\r\n  const [loading, setLoading] = useState(false); // Loading state to show when data is being fetched\r\n  const [showDonors, setShowDonors] = useState(false); // To track when to show donor data\r\n\r\n  // Function to fetch donors when button is clicked\r\n  const fetchDonors = async () => {\r\n    setLoading(true); // Start loading\r\n    setShowDonors(true); // Show donor list after fetching\r\n\r\n    try {\r\n      const donorCollection = collection(db, \"donors\"); // Reference to donors collection\r\n      const donorSnapshot = await getDocs(donorCollection); // Get donor data\r\n      const donorList = donorSnapshot.docs.map((doc) => doc.data()); // Map through the docs to get data\r\n      setDoners(donorList); // Set the fetched donor data to state\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors: \", error);\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blood Donor List</h2>\r\n\r\n      {/* Button to fetch and display donors */}\r\n      <button onClick={fetchDonors}>\r\n        Donate Blood (Click to fetch Donors)\r\n      </button>\r\n\r\n      {/* Show loading text when fetching donors */}\r\n      {loading && <p>Loading donors...</p>}\r\n\r\n      {/* Show message if no donors are found */}\r\n      {doners.length === 0 && !loading && showDonors && <p>No donors found.</p>}\r\n\r\n      {/* Render donor data if available */}\r\n      {doners.length > 0 && (\r\n        <div>\r\n          {doners.map((doner, index) => (\r\n            <div key={index} className=\"doner\" style={{ marginBottom: \"20px\" }}>\r\n              <h3>Name: {doner.Name || \"N/A\"}</h3>\r\n              <p>Age: {doner.Age || \"N/A\"}</p>\r\n              <p>Contact Number: {doner.ContactNumber || \"N/A\"}</p>\r\n              <p>Blood Group: {doner.BloodGroup || \"N/A\"}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonersData;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}