{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\home.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... existing imports ...\n\nconst HomePage = () => {\n  // ... existing state declarations ...\n\n  // Remove the AddDonate function as DonateButton is the improved version\n\n  const DonateButton = async () => {\n    if (!name || !bloodGroup || !city || !ContactNo || !age) {\n      // Added age check\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\n      return;\n    }\n    const user = auth.currentUser;\n    if (!user) {\n      Swal.fire(\"Please log in to donate blood.\");\n      return;\n    }\n    try {\n      const donorQuery = query(collection(db, \"BloodDonors\"),\n      // Fixed collection name\n      where(\"Email\", \"==\", user.email));\n      const donorSnapshot = await getDocs(donorQuery);\n      if (!donorSnapshot.empty) {\n        Swal.fire(\"You have already donated blood once.\");\n        return;\n      }\n      await addDoc(collection(db, \"BloodDonors\"), {\n        DonerName: name,\n        DonerBloodGroup: bloodGroup,\n        CityName: city,\n        ContactNo: ContactNo,\n        Age: age,\n        Email: user.email,\n        DonationDate: new Date().toISOString()\n      });\n      Swal.fire(`Thank you ${name} for your blood donation!`);\n      // Clear all fields\n      setName(\"\");\n      setBloodGroup(\"\");\n      setCity(\"\");\n      setContactNo(\"\");\n      setAge(\"\");\n    } catch (error) {\n      console.error(\"Error donating blood:\", error.message);\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\n    }\n  };\n\n  // Update FindDoner function to use correct collection name\n  const FindDoner = async () => {\n    // ... existing code ...\n    const matchData = query(collection(db, \"BloodDonors\"), ...filters);\n    // ... rest of the function ...\n  };\n\n  // Add navbar toggle function\n  const toggleNavbar = () => {\n    const navbarLinks = document.querySelector('.navbar-links');\n    navbarLinks.classList.toggle('active');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-toggle\",\n        onClick: toggleNavbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["HomePage","DonateButton","name","bloodGroup","city","ContactNo","age","Swal","fire","user","auth","currentUser","donorQuery","query","collection","db","where","email","donorSnapshot","getDocs","empty","addDoc","DonerName","DonerBloodGroup","CityName","Age","Email","DonationDate","Date","toISOString","setName","setBloodGroup","setCity","setContactNo","setAge","error","console","message","FindDoner","matchData","filters","toggleNavbar","navbarLinks","document","querySelector","classList","toggle","_jsxDEV","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// ... existing imports ...\r\n\r\nconst HomePage = () => {\r\n  // ... existing state declarations ...\r\n\r\n  // Remove the AddDonate function as DonateButton is the improved version\r\n\r\n  const DonateButton = async () => {\r\n    if (!name || !bloodGroup || !city || !ContactNo || !age) { // Added age check\r\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n      return;\r\n    }\r\n  \r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      Swal.fire(\"Please log in to donate blood.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const donorQuery = query(\r\n        collection(db, \"BloodDonors\"), // Fixed collection name\r\n        where(\"Email\", \"==\", user.email)\r\n      );\r\n      const donorSnapshot = await getDocs(donorQuery);\r\n  \r\n      if (!donorSnapshot.empty) {\r\n        Swal.fire(\"You have already donated blood once.\");\r\n        return;\r\n      }\r\n  \r\n      await addDoc(collection(db, \"BloodDonors\"), {\r\n        DonerName: name,\r\n        DonerBloodGroup: bloodGroup,\r\n        CityName: city,\r\n        ContactNo: ContactNo,\r\n        Age: age,\r\n        Email: user.email,\r\n        DonationDate: new Date().toISOString()\r\n      });\r\n  \r\n      Swal.fire(`Thank you ${name} for your blood donation!`);\r\n      // Clear all fields\r\n      setName(\"\");\r\n      setBloodGroup(\"\");\r\n      setCity(\"\");\r\n      setContactNo(\"\");\r\n      setAge(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error donating blood:\", error.message);\r\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Update FindDoner function to use correct collection name\r\n  const FindDoner = async () => {\r\n    // ... existing code ...\r\n    const matchData = query(collection(db, \"BloodDonors\"), ...filters);\r\n    // ... rest of the function ...\r\n  };\r\n\r\n  // Add navbar toggle function\r\n  const toggleNavbar = () => {\r\n    const navbarLinks = document.querySelector('.navbar-links');\r\n    navbarLinks.classList.toggle('active');\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {/* ... existing code ... */}\r\n      <div className=\"navbar\">\r\n        {/* ... existing navbar code ... */}\r\n        <div className=\"navbar-toggle\" onClick={toggleNavbar}>\r\n          {/* ... spans ... */}\r\n        </div>\r\n        {/* ... rest of navbar ... */}\r\n      </div>\r\n      {/* ... rest of the JSX ... */}\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA;;AAEA,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EACrB;;EAEA;;EAEA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACC,IAAI,IAAI,CAACC,UAAU,IAAI,CAACC,IAAI,IAAI,CAACC,SAAS,IAAI,CAACC,GAAG,EAAE;MAAE;MACzDC,IAAI,CAACC,IAAI,CAAC,sDAAsD,CAAC;MACjE;IACF;IAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,WAAW;IAC7B,IAAI,CAACF,IAAI,EAAE;MACTF,IAAI,CAACC,IAAI,CAAC,gCAAgC,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMI,UAAU,GAAGC,KAAK,CACtBC,UAAU,CAACC,EAAE,EAAE,aAAa,CAAC;MAAE;MAC/BC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEP,IAAI,CAACQ,KAAK,CACjC,CAAC;MACD,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACP,UAAU,CAAC;MAE/C,IAAI,CAACM,aAAa,CAACE,KAAK,EAAE;QACxBb,IAAI,CAACC,IAAI,CAAC,sCAAsC,CAAC;QACjD;MACF;MAEA,MAAMa,MAAM,CAACP,UAAU,CAACC,EAAE,EAAE,aAAa,CAAC,EAAE;QAC1CO,SAAS,EAAEpB,IAAI;QACfqB,eAAe,EAAEpB,UAAU;QAC3BqB,QAAQ,EAAEpB,IAAI;QACdC,SAAS,EAAEA,SAAS;QACpBoB,GAAG,EAAEnB,GAAG;QACRoB,KAAK,EAAEjB,IAAI,CAACQ,KAAK;QACjBU,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACvC,CAAC,CAAC;MAEFtB,IAAI,CAACC,IAAI,CAAC,aAAaN,IAAI,2BAA2B,CAAC;MACvD;MACA4B,OAAO,CAAC,EAAE,CAAC;MACXC,aAAa,CAAC,EAAE,CAAC;MACjBC,OAAO,CAAC,EAAE,CAAC;MACXC,YAAY,CAAC,EAAE,CAAC;MAChBC,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACrD9B,IAAI,CAACC,IAAI,CAAC,2DAA2D,CAAC;IACxE;EACF,CAAC;;EAED;EACA,MAAM8B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,SAAS,GAAG1B,KAAK,CAACC,UAAU,CAACC,EAAE,EAAE,aAAa,CAAC,EAAE,GAAGyB,OAAO,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;IAC3DF,WAAW,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEC,OAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,QAAA,eAEvBF,OAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAErBF,OAAA;QAAKC,SAAS,EAAC,eAAe;QAACE,OAAO,EAAET;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACC,EAAA,GA9EIvD,QAAQ;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}