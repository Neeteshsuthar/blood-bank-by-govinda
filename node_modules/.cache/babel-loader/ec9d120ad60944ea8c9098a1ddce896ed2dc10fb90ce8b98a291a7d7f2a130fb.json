{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\n// import { auth, db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import { Helmet } from \"react-helmet\";\n// import \"../styles/home.css\";\n// import { signOut } from \"firebase/auth\";\n\n// const HomePage = () => {\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [age, setAge] = useState(\"\");\n//   const [ContactNo, setContactNo] = useState(\"\");\n//   const [donors, setDonors] = useState([]);\n//   const DonateButton = async () => {\n//     if (!name || !bloodGroup || !city || !ContactNo) {\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\n//       return;\n//     }\n\n//     try {\n//       await addDoc(collection(db, \"BloodDoners\"), {\n//         DonerName: name,\n//         DonerBloodGroup: bloodGroup,\n//         CityName: city,\n//         ContactNo: ContactNo,\n//       });\n\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\n//       setName(\"\");\n//       setBloodGroup(\"\");\n//       setCity(\"\");\n//       setContactNo(\"\");\n//     } catch (error) {\n//       console.error(\"Error donating blood:\", error.message);\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\n//     }\n//   };\n//     const FindDoner = async () => {\n//     if (!bloodGroup || !city) {\n//       Swal.fire(\"Please add both city and blood group\");\n//       return;\n//     }\n\n//     try {\n//       const filters = [];\n//       if (bloodGroup) {\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n//       }\n//       if (city) {\n//      filters.push(where(\"CityName\", \"==\", city));\n//       }\n\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n//       const querySnapshot = await getDocs(matchData);\n\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\n//         id: doc.id,\n//         DonerName: doc.data().DonerName,\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\n//         CityName: doc.data().CityName,\n//         ContactNo: doc.data().ContactNo,\n//       }));\n\n//       if (matchedDonors.length === 0) {\n//         Swal.fire(\"No donors found matching your criteria.\");\n//       } else {\n//         setDonors(matchedDonors);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching donors:\", error);\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n//     }\n//   };\n\n//   // Logout Function\n//   const LogOut = async () => {\n//     try {\n//       await signOut(auth);\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Error during logout:\", error);\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n//     }\n//   };\n\n//   return (\n//    \n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { auth, db } from \"../init-firebase\";\nimport Swal from \"sweetalert2\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHelmet;\nconst HomePage = () => {\n  _s();\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [ContactNo, setContactNo] = useState(\"\");\n  const [donors, setDonors] = useState([]);\n  const AddDonate = async (donateGroups, name, city, contactNo) => {\n    onAuthStateChanged(auth, async user => {\n      if (user) {\n        const currentProfileUser = user.email;\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        querySnapshot.forEach(async doc => {\n          const userData = doc.data();\n          if (currentProfileUser === userData.Email) {\n            // Check if the user has already donated\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\n            const donorSnapshot = await getDocs(q);\n            if (donorSnapshot.empty) {\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\n                Swal.fire(\"Please Select Your Blood Group !\");\n              } else if (name === \"\" || city === \"\" || contactNo === \"\") {\n                Swal.fire(\"Please fill in all fields before donating.\");\n              } else {\n                try {\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\n                    Name: userData.Name,\n                    Email: userData.Email,\n                    PhoneNo: userData.PhoneNo,\n                    Age: userData.Age,\n                    UserType: userData.UserType,\n                    City: city,\n                    ImageUrl: userData.ImageUrl,\n                    BloodGroup: donateGroups\n                  });\n                  console.log(\"Document written with ID: \", docRef.id);\n                  Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\n                } catch (e) {\n                  console.error(\"Error adding document: \", e);\n                }\n              }\n            } else {\n              Swal.fire(\"You're Already a Donor!\");\n            }\n          }\n        });\n      } else {\n        console.log(\"User Not Logged In, Please Log In!\");\n      }\n    });\n  };\n  const DonateButton = async () => {\n    if (!name || !bloodGroup || !city || !ContactNo) {\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\n      return;\n    }\n\n    // Call AddDonate to add the donation details\n    AddDonate(bloodGroup, name, city, ContactNo);\n    try {\n      await addDoc(collection(db, \"BloodDoners\"), {\n        DonerName: name,\n        DonerBloodGroup: bloodGroup,\n        CityName: city,\n        ContactNo: ContactNo\n      });\n      Swal.fire(`Thank you ${name} for your blood donation!`);\n      setName(\"\");\n      setBloodGroup(\"\");\n      setCity(\"\");\n      setContactNo(\"\");\n    } catch (error) {\n      console.error(\"Error donating blood:\", error.message);\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\n    }\n  };\n  const FindDoner = async () => {\n    if (!bloodGroup || !city) {\n      Swal.fire(\"Please add both city and blood group\");\n      return;\n    }\n    try {\n      const filters = [];\n      if (bloodGroup) {\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n      }\n      if (city) {\n        filters.push(where(\"CityName\", \"==\", city));\n      }\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n      const querySnapshot = await getDocs(matchData);\n      const matchedDonors = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        DonerName: doc.data().DonerName,\n        DonerBloodGroup: doc.data().DonerBloodGroup,\n        CityName: doc.data().CityName,\n        ContactNo: doc.data().ContactNo\n      }));\n      if (matchedDonors.length === 0) {\n        Swal.fire(\"No donors found matching your criteria.\");\n      } else {\n        setDonors(matchedDonors);\n      }\n    } catch (error) {\n      console.error(\"Error fetching donors:\", error);\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n    }\n  };\n  // LogOut Function\n  const LogOut = async () => {\n    try {\n      await signOut(auth);\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [\"         \", /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }, this), \"//       \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: \"Blood Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-toggle\",\n        onClick: \"toggleNavbar()\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/profile\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 12\n        }, this), \"           \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: LogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/contact\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Blood Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Your Age\",\n        value: age,\n        onChange: e => setAge(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Blood Group\",\n        value: bloodGroup,\n        onChange: e => setBloodGroup(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 10\n      }, this), \"         \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Contact NO\",\n        value: ContactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 121\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: DonateButton,\n          className: \"btn donate-btn\",\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: FindDoner,\n          className: \"btn find-btn\",\n          children: \"Find Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donor-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Donor List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 10\n      }, this), donors.length > 0 ? donors.map((donor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donor-card\",\n        children: [\"//               \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 18\n          }, this), \" \", donor.DonerName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Group:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), \" \", donor.DonerBloodGroup, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this), \" \", donor.CityName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this), \" \", donor.ContactNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 16\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donors found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA9 \", new Date().getFullYear(), \" Blood Bank | All Rights Reserved\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 2\n  }, this);\n};\n_s(HomePage, \"K3a5V80S5fnStqqhClu1oniPjpA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","query","where","auth","db","Swal","onAuthStateChanged","signOut","jsxDEV","_jsxDEV","Helmet","HomePage","_s","bloodGroup","setBloodGroup","city","setCity","name","setName","age","setAge","ContactNo","setContactNo","donors","setDonors","AddDonate","donateGroups","contactNo","user","currentProfileUser","email","querySnapshot","forEach","doc","userData","data","Email","q","donorSnapshot","empty","fire","docRef","Name","PhoneNo","Age","UserType","City","ImageUrl","BloodGroup","console","log","id","e","error","DonateButton","DonerName","DonerBloodGroup","CityName","message","FindDoner","filters","push","matchData","matchedDonors","docs","map","length","LogOut","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","donor","index","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n// import { auth, db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import \"../styles/home.css\";\r\n// import { signOut } from \"firebase/auth\";\r\n\r\n// const HomePage = () => {\r\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [age, setAge] = useState(\"\");\r\n//   const [ContactNo, setContactNo] = useState(\"\");\r\n//   const [donors, setDonors] = useState([]);\r\n//   const DonateButton = async () => {\r\n//     if (!name || !bloodGroup || !city || !ContactNo) {\r\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await addDoc(collection(db, \"BloodDoners\"), {\r\n//         DonerName: name,\r\n//         DonerBloodGroup: bloodGroup,\r\n//         CityName: city,\r\n//         ContactNo: ContactNo,\r\n//       });\r\n\r\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\r\n//       setName(\"\");\r\n//       setBloodGroup(\"\");\r\n//       setCity(\"\");\r\n//       setContactNo(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error donating blood:\", error.message);\r\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n//     }\r\n//   };\r\n//     const FindDoner = async () => {\r\n//     if (!bloodGroup || !city) {\r\n//       Swal.fire(\"Please add both city and blood group\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const filters = [];\r\n//       if (bloodGroup) {\r\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n//       }\r\n//       if (city) {\r\n//      filters.push(where(\"CityName\", \"==\", city));\r\n//       }\r\n\r\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n//       const querySnapshot = await getDocs(matchData);\r\n\r\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         DonerName: doc.data().DonerName,\r\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\r\n//         CityName: doc.data().CityName,\r\n//         ContactNo: doc.data().ContactNo,\r\n//       }));\r\n\r\n//       if (matchedDonors.length === 0) {\r\n//         Swal.fire(\"No donors found matching your criteria.\");\r\n//       } else {\r\n//         setDonors(matchedDonors);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching donors:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   // Logout Function\r\n//   const LogOut = async () => {\r\n//     try {\r\n//       await signOut(auth);\r\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Error during logout:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//    \r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"../init-firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nHelmet\r\nconst HomePage = () => {\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [ContactNo, setContactNo] = useState(\"\");\r\n  const [donors, setDonors] = useState([]);\r\n\r\n  const AddDonate = async (donateGroups, name, city, contactNo) => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        const currentProfileUser = user.email;\r\n\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        querySnapshot.forEach(async (doc) => {\r\n          const userData = doc.data();\r\n\r\n          if (currentProfileUser === userData.Email) {\r\n            // Check if the user has already donated\r\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\r\n            const donorSnapshot = await getDocs(q);\r\n\r\n            if (donorSnapshot.empty) {\r\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\r\n                Swal.fire(\"Please Select Your Blood Group !\");\r\n              } else if (name === \"\" || city === \"\" || contactNo === \"\") {\r\n                Swal.fire(\"Please fill in all fields before donating.\");\r\n              } else {\r\n                try {\r\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\r\n                    Name: userData.Name,\r\n                    Email: userData.Email,\r\n                    PhoneNo: userData.PhoneNo,\r\n                    Age: userData.Age,\r\n                    UserType: userData.UserType,\r\n                    City: city,\r\n                    ImageUrl: userData.ImageUrl,\r\n                    BloodGroup: donateGroups,\r\n                  });\r\n                  console.log(\"Document written with ID: \", docRef.id);\r\n                  Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\r\n                } catch (e) {\r\n                  console.error(\"Error adding document: \", e);\r\n                }\r\n              }\r\n            } else {\r\n              Swal.fire(\"You're Already a Donor!\");\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"User Not Logged In, Please Log In!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const DonateButton = async () => {\r\n    if (!name || !bloodGroup || !city || !ContactNo) {\r\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n      return;\r\n    }\r\n\r\n    // Call AddDonate to add the donation details\r\n    AddDonate(bloodGroup, name, city, ContactNo);\r\n\r\n    try {\r\n      await addDoc(collection(db, \"BloodDoners\"), {\r\n        DonerName: name,\r\n        DonerBloodGroup: bloodGroup,\r\n        CityName: city,\r\n        ContactNo: ContactNo,\r\n      });\r\n\r\n      Swal.fire(`Thank you ${name} for your blood donation!`);\r\n      setName(\"\");\r\n      setBloodGroup(\"\");\r\n      setCity(\"\");\r\n      setContactNo(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error donating blood:\", error.message);\r\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const FindDoner = async () => {\r\n    if (!bloodGroup || !city) {\r\n      Swal.fire(\"Please add both city and blood group\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const filters = [];\r\n      if (bloodGroup) {\r\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n      }\r\n      if (city) {\r\n        filters.push(where(\"CityName\", \"==\", city));\r\n      }\r\n\r\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n      const querySnapshot = await getDocs(matchData);\r\n\r\n      const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        DonerName: doc.data().DonerName,\r\n        DonerBloodGroup: doc.data().DonerBloodGroup,\r\n        CityName: doc.data().CityName,\r\n        ContactNo: doc.data().ContactNo,\r\n      }));\r\n\r\n      if (matchedDonors.length === 0) {\r\n        Swal.fire(\"No donors found matching your criteria.\");\r\n      } else {\r\n        setDonors(matchedDonors);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors:\", error);\r\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n    }\r\n  };\r\n  // LogOut Function\r\n  const LogOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n      window.location.href = \"/login\";\r\n    } catch (error) {\r\n      console.error(\"Error during logout:\", error);\r\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n <div className=\"homepage\">\r\n     <Helmet>         <title>HomePage</title>\r\n//       </Helmet>\r\n    <div className=\"navbar\">\r\n         <div className=\"navbar-brand\">Blood Bank</div>\r\n         <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\r\n           <span></span>\r\n          <span></span>\r\n           <span></span>\r\n         </div>\r\n         <div className=\"navbar-links\">\r\n          <a href=\"/home\">Home</a>\r\n           <a href=\"/profile\">Profile</a>           <button onClick={LogOut}>Logout</button>\r\n         <a href=\"/contact\">Contact Us</a>\r\n         </div>\r\n       </div>\r\n\r\n       <h1 className=\"title\">Blood Bank</h1>\r\n       <div className=\"form-container\">\r\n         <input\r\n           type=\"text\" placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)}  />\r\n         <input type=\"number\"  placeholder=\"Enter Your Age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n         <input  type=\"text\" placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)} />\r\n         <input  type=\"text\" placeholder=\"Enter City\" value={city} onChange={(e) => setCity(e.target.value)} />         <input type=\"text\" placeholder=\"Enter Contact NO\"value={ContactNo}onChange={(e) => setContactNo(e.target.value)} />\r\n           <div className=\"button-group\">\r\n           <button onClick={DonateButton} className=\"btn donate-btn\">\r\n             Donate Blood\r\n           </button>\r\n           <button onClick={FindDoner} className=\"btn find-btn\">\r\n            Find Donor\r\n           </button>\r\n         </div>\r\n       </div>\r\n\r\n       <div className=\"donor-list\">\r\n         <h2>Donor List</h2>\r\n         {donors.length > 0 ? (\r\n           donors.map((donor, index) => (\r\n            <div key={index} className=\"donor-card\">//               <p>\r\n                 <strong>Name:</strong> {donor.DonerName} </p>\r\n               <p><strong>Blood Group:</strong> {donor.DonerBloodGroup} </p>\r\n               <p><strong>City:</strong> {donor.CityName} </p>\r\n               <p><strong>Contact No:</strong> {donor.ContactNo}</p>\r\n             </div>\r\n           ))\r\n         ) : (<p>No donors found</p>\r\n        )}\r\n       </div>\r\n       <footer className=\"footer\">\r\n         <div className=\"footer-container\">\r\n           <p>&copy; {new Date().getFullYear()} Blood Bank | All Rights Reserved</p>\r\n           <p>\r\n           </p>\r\n         </div>\r\n       </footer>\r\n     </div> \r\n  )}\r\n    \r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAC9E,SAASC,IAAI,EAAEC,EAAE,QAAQ,kBAAkB;AAC3C,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5DC,MAAM;AACN,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACuB,GAAG,EAAEC,MAAM,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM6B,SAAS,GAAG,MAAAA,CAAOC,YAAY,EAAET,IAAI,EAAEF,IAAI,EAAEY,SAAS,KAAK;IAC/DrB,kBAAkB,CAACH,IAAI,EAAE,MAAOyB,IAAI,IAAK;MACvC,IAAIA,IAAI,EAAE;QACR,MAAMC,kBAAkB,GAAGD,IAAI,CAACE,KAAK;QAErC,MAAMC,aAAa,GAAG,MAAM/B,OAAO,CAACF,UAAU,CAACM,EAAE,EAAE,OAAO,CAAC,CAAC;QAC5D2B,aAAa,CAACC,OAAO,CAAC,MAAOC,GAAG,IAAK;UACnC,MAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;UAE3B,IAAIN,kBAAkB,KAAKK,QAAQ,CAACE,KAAK,EAAE;YACzC;YACA,MAAMC,CAAC,GAAGpC,KAAK,CAACH,UAAU,CAACM,EAAE,EAAE,QAAQ,CAAC,EAAEF,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEgC,QAAQ,CAACE,KAAK,CAAC,CAAC;YAC/E,MAAME,aAAa,GAAG,MAAMtC,OAAO,CAACqC,CAAC,CAAC;YAEtC,IAAIC,aAAa,CAACC,KAAK,EAAE;cACvB,IAAIb,YAAY,KAAK,EAAE,IAAIA,YAAY,KAAK,0BAA0B,EAAE;gBACtErB,IAAI,CAACmC,IAAI,CAAC,kCAAkC,CAAC;cAC/C,CAAC,MAAM,IAAIvB,IAAI,KAAK,EAAE,IAAIF,IAAI,KAAK,EAAE,IAAIY,SAAS,KAAK,EAAE,EAAE;gBACzDtB,IAAI,CAACmC,IAAI,CAAC,4CAA4C,CAAC;cACzD,CAAC,MAAM;gBACL,IAAI;kBACF,MAAMC,MAAM,GAAG,MAAM1C,MAAM,CAACD,UAAU,CAACM,EAAE,EAAE,QAAQ,CAAC,EAAE;oBACpDsC,IAAI,EAAER,QAAQ,CAACQ,IAAI;oBACnBN,KAAK,EAAEF,QAAQ,CAACE,KAAK;oBACrBO,OAAO,EAAET,QAAQ,CAACS,OAAO;oBACzBC,GAAG,EAAEV,QAAQ,CAACU,GAAG;oBACjBC,QAAQ,EAAEX,QAAQ,CAACW,QAAQ;oBAC3BC,IAAI,EAAE/B,IAAI;oBACVgC,QAAQ,EAAEb,QAAQ,CAACa,QAAQ;oBAC3BC,UAAU,EAAEtB;kBACd,CAAC,CAAC;kBACFuB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAET,MAAM,CAACU,EAAE,CAAC;kBACpD9C,IAAI,CAACmC,IAAI,CAAC,aAAaN,QAAQ,CAACQ,IAAI,2BAA2B,CAAC;gBAClE,CAAC,CAAC,OAAOU,CAAC,EAAE;kBACVH,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;gBAC7C;cACF;YACF,CAAC,MAAM;cACL/C,IAAI,CAACmC,IAAI,CAAC,yBAAyB,CAAC;YACtC;UACF;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACrC,IAAI,IAAI,CAACJ,UAAU,IAAI,CAACE,IAAI,IAAI,CAACM,SAAS,EAAE;MAC/ChB,IAAI,CAACmC,IAAI,CAAC,sDAAsD,CAAC;MACjE;IACF;;IAEA;IACAf,SAAS,CAACZ,UAAU,EAAEI,IAAI,EAAEF,IAAI,EAAEM,SAAS,CAAC;IAE5C,IAAI;MACF,MAAMtB,MAAM,CAACD,UAAU,CAACM,EAAE,EAAE,aAAa,CAAC,EAAE;QAC1CmD,SAAS,EAAEtC,IAAI;QACfuC,eAAe,EAAE3C,UAAU;QAC3B4C,QAAQ,EAAE1C,IAAI;QACdM,SAAS,EAAEA;MACb,CAAC,CAAC;MAEFhB,IAAI,CAACmC,IAAI,CAAC,aAAavB,IAAI,2BAA2B,CAAC;MACvDC,OAAO,CAAC,EAAE,CAAC;MACXJ,aAAa,CAAC,EAAE,CAAC;MACjBE,OAAO,CAAC,EAAE,CAAC;MACXM,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACK,OAAO,CAAC;MACrDrD,IAAI,CAACmC,IAAI,CAAC,2DAA2D,CAAC;IACxE;EACF,CAAC;EAED,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAC9C,UAAU,IAAI,CAACE,IAAI,EAAE;MACxBV,IAAI,CAACmC,IAAI,CAAC,sCAAsC,CAAC;MACjD;IACF;IAEA,IAAI;MACF,MAAMoB,OAAO,GAAG,EAAE;MAClB,IAAI/C,UAAU,EAAE;QACd+C,OAAO,CAACC,IAAI,CAAC3D,KAAK,CAAC,iBAAiB,EAAE,IAAI,EAAEW,UAAU,CAAC,CAAC;MAC1D;MACA,IAAIE,IAAI,EAAE;QACR6C,OAAO,CAACC,IAAI,CAAC3D,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEa,IAAI,CAAC,CAAC;MAC7C;MAEA,MAAM+C,SAAS,GAAG7D,KAAK,CAACH,UAAU,CAACM,EAAE,EAAE,aAAa,CAAC,EAAE,GAAGwD,OAAO,CAAC;MAClE,MAAM7B,aAAa,GAAG,MAAM/B,OAAO,CAAC8D,SAAS,CAAC;MAE9C,MAAMC,aAAa,GAAGhC,aAAa,CAACiC,IAAI,CAACC,GAAG,CAAEhC,GAAG,KAAM;QACrDkB,EAAE,EAAElB,GAAG,CAACkB,EAAE;QACVI,SAAS,EAAEtB,GAAG,CAACE,IAAI,CAAC,CAAC,CAACoB,SAAS;QAC/BC,eAAe,EAAEvB,GAAG,CAACE,IAAI,CAAC,CAAC,CAACqB,eAAe;QAC3CC,QAAQ,EAAExB,GAAG,CAACE,IAAI,CAAC,CAAC,CAACsB,QAAQ;QAC7BpC,SAAS,EAAEY,GAAG,CAACE,IAAI,CAAC,CAAC,CAACd;MACxB,CAAC,CAAC,CAAC;MAEH,IAAI0C,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;QAC9B7D,IAAI,CAACmC,IAAI,CAAC,yCAAyC,CAAC;MACtD,CAAC,MAAM;QACLhB,SAAS,CAACuC,aAAa,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ChD,IAAI,CAACmC,IAAI,CAAC,OAAO,EAAE,sBAAsB,EAAE,OAAO,CAAC;IACrD;EACF,CAAC;EACD;EACA,MAAM2B,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM5D,OAAO,CAACJ,IAAI,CAAC;MACnBE,IAAI,CAACmC,IAAI,CAAC,SAAS,EAAE,2BAA2B,EAAE,SAAS,CAAC;MAC5D4B,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ChD,IAAI,CAACmC,IAAI,CAAC,OAAO,EAAE,sCAAsC,EAAE,OAAO,CAAC;IACrE;EACF,CAAC;EAED,oBACD/B,OAAA;IAAK8D,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB/D,OAAA,CAACC,MAAM;MAAA8D,QAAA,GAAC,WAAS,eAAA/D,OAAA;QAAA+D,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,aACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACdnE,OAAA;MAAK8D,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBAClB/D,OAAA;QAAK8D,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CnE,OAAA;QAAK8D,SAAS,EAAC,eAAe;QAACM,OAAO,EAAC,gBAAgB;QAAAL,QAAA,gBACrD/D,OAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACdnE,OAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACZnE,OAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNnE,OAAA;QAAK8D,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC5B/D,OAAA;UAAG6D,IAAI,EAAC,OAAO;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvBnE,OAAA;UAAG6D,IAAI,EAAC,UAAU;UAAAE,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAAW,eAAAnE,OAAA;UAAQoE,OAAO,EAAEV,MAAO;UAAAK,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnFnE,OAAA;UAAG6D,IAAI,EAAC,UAAU;UAAAE,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnE,OAAA;MAAI8D,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCnE,OAAA;MAAK8D,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B/D,OAAA;QACEqE,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,iBAAiB;QAACC,KAAK,EAAE/D,IAAK;QAACgE,QAAQ,EAAG7B,CAAC,IAAKlC,OAAO,CAACkC,CAAC,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtGnE,OAAA;QAAOqE,IAAI,EAAC,QAAQ;QAAEC,WAAW,EAAC,gBAAgB;QAACC,KAAK,EAAE7D,GAAI;QAAC8D,QAAQ,EAAG7B,CAAC,IAAKhC,MAAM,CAACgC,CAAC,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1GnE,OAAA;QAAQqE,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,mBAAmB;QAACC,KAAK,EAAEnE,UAAW;QAACoE,QAAQ,EAAG7B,CAAC,IAAKtC,aAAa,CAACsC,CAAC,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzHnE,OAAA;QAAQqE,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,YAAY;QAACC,KAAK,EAAEjE,IAAK;QAACkE,QAAQ,EAAG7B,CAAC,IAAKpC,OAAO,CAACoC,CAAC,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,aAAS,eAAAnE,OAAA;QAAOqE,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,kBAAkB;QAAAC,KAAK,EAAE3D,SAAU;QAAA4D,QAAQ,EAAG7B,CAAC,IAAK9B,YAAY,CAAC8B,CAAC,CAAC8B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChOnE,OAAA;QAAK8D,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC7B/D,OAAA;UAAQoE,OAAO,EAAEvB,YAAa;UAACiB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnE,OAAA;UAAQoE,OAAO,EAAElB,SAAU;UAACY,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnE,OAAA;MAAK8D,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB/D,OAAA;QAAA+D,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBrD,MAAM,CAAC2C,MAAM,GAAG,CAAC,GAChB3C,MAAM,CAAC0C,GAAG,CAAC,CAACkB,KAAK,EAAEC,KAAK,kBACvB3E,OAAA;QAAiB8D,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,mBAAiB,eAAA/D,OAAA;UAAA+D,QAAA,gBACpD/D,OAAA;YAAA+D,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACO,KAAK,CAAC5B,SAAS,EAAC,GAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/CnE,OAAA;UAAA+D,QAAA,gBAAG/D,OAAA;YAAA+D,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACO,KAAK,CAAC3B,eAAe,EAAC,GAAC;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7DnE,OAAA;UAAA+D,QAAA,gBAAG/D,OAAA;YAAA+D,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACO,KAAK,CAAC1B,QAAQ,EAAC,GAAC;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/CnE,OAAA;UAAA+D,QAAA,gBAAG/D,OAAA;YAAA+D,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACO,KAAK,CAAC9D,SAAS;QAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ9CQ,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACN,CAAC,gBACCnE,OAAA;QAAA+D,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC1B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACNnE,OAAA;MAAQ8D,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxB/D,OAAA;QAAK8D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B/D,OAAA;UAAA+D,QAAA,GAAG,OAAO,EAAC,IAAIa,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAC,mCAAiC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzEnE,OAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AACR,CAAC;AAAAhE,EAAA,CA7LED,QAAQ;AAAA4E,EAAA,GAAR5E,QAAQ;AAgMd,eAAeA,QAAQ;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}