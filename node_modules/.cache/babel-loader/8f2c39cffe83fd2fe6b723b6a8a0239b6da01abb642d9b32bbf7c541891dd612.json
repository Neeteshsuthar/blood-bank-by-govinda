{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\ome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db, collection, getDocs } from \"../init-firebase\"; // Modular Firebase import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonersData = () => {\n  _s();\n  const [doners, setDoners] = useState([]);\n  useEffect(() => {\n    // Correctly handle data fetching inside useEffect\n    const fetchDonors = async () => {\n      try {\n        // Get the collection reference\n        const donorCollection = collection(db, \"donors\");\n        const donorSnapshot = await getDocs(donorCollection);\n\n        // Map over the documents to get the data and store it in the state\n        const donorList = donorSnapshot.docs.map(doc => doc.data());\n\n        // Set the donors state\n        setDoners(donorList);\n      } catch (error) {\n        console.error(\"Error fetching donors: \", error);\n      }\n    };\n    fetchDonors();\n  }, []); // Empty dependency array to run only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blood Donor List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: doners.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : doners.map((doner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doner.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doner.Age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doner.ContactNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doner.BloodGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DonersData, \"9Yap2kBmKD9R9b0VJGx3K+HUYw4=\");\n_c = DonersData;\nexport default DonersData;\nvar _c;\n$RefreshReg$(_c, \"DonersData\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","jsxDEV","_jsxDEV","DonersData","_s","doners","setDoners","fetchDonors","donorCollection","donorSnapshot","donorList","docs","map","doc","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","doner","index","className","Name","Age","ContactNumber","BloodGroup","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/ome.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db, collection, getDocs } from \"../init-firebase\"; // Modular Firebase import\r\n\r\nconst DonersData = () => {\r\n  const [doners, setDoners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Correctly handle data fetching inside useEffect\r\n    const fetchDonors = async () => {\r\n      try {\r\n        // Get the collection reference\r\n        const donorCollection = collection(db, \"donors\");\r\n                const donorSnapshot = await getDocs(donorCollection);\r\n        \r\n        // Map over the documents to get the data and store it in the state\r\n        const donorList = donorSnapshot.docs.map((doc) => doc.data());\r\n        \r\n        // Set the donors state\r\n        setDoners(donorList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching donors: \", error);\r\n      }\r\n    };\r\n\r\n    fetchDonors();\r\n  }, []); // Empty dependency array to run only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blood Donor List</h2>\r\n      <div>\r\n        {doners.length === 0 ? (\r\n          <p>No donors found.</p>\r\n        ) : (\r\n          doners.map((doner, index) => (\r\n            <div key={index} className=\"doner\">\r\n              <h3>{doner.Name}</h3>\r\n              <h3>{doner.Age}</h3>\r\n              <h3>{doner.ContactNumber}</h3>\r\n              <h3>{doner.BloodGroup}</h3>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DonersData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,EAAEC,UAAU,EAAEC,OAAO,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,eAAe,GAAGT,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC;QACxC,MAAMW,aAAa,GAAG,MAAMT,OAAO,CAACQ,eAAe,CAAC;;QAE5D;QACA,MAAME,SAAS,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;;QAE7D;QACAR,SAAS,CAACI,SAAS,CAAC;MACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnB,OAAA;MAAAe,QAAA,EACGZ,MAAM,CAACiB,MAAM,KAAK,CAAC,gBAClBpB,OAAA;QAAAe,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEvBhB,MAAM,CAACO,GAAG,CAAC,CAACW,KAAK,EAAEC,KAAK,kBACtBtB,OAAA;QAAiBuB,SAAS,EAAC,OAAO;QAAAR,QAAA,gBAChCf,OAAA;UAAAe,QAAA,EAAKM,KAAK,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAe,QAAA,EAAKM,KAAK,CAACI;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBnB,OAAA;UAAAe,QAAA,EAAKM,KAAK,CAACK;QAAa;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9BnB,OAAA;UAAAe,QAAA,EAAKM,KAAK,CAACM;QAAU;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJnBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3CID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}