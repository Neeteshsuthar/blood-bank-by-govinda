{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\Herosec.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Swal from \"sweetalert2\";\n// import { collection, addDoc } from \"firebase/firestore\";\n// import { db } from \"../init-firebase\"; // Correct import\n\n// const Hero = () => {\n//   const [Name, setName] = useState('');\n//   const [Age, setAge] = useState('');\n//   const [ContactNumber, setContactNumber] = useState('');\n//   const [BloodGroup, setBloodGroup] = useState('');\n\n//   const DonateSubmit = async (e) => {\n//     e.preventDefault(); // Prevent the form from refreshing the page\n//     try {\n//       // Add donor data to Firestore using modular API\n//       await addDoc(collection(db, 'doners'), {\n//         Name,\n//         Age,\n//         ContactNumber,\n//         BloodGroup,\n//       });\n\n//       // Show a success alert using SweetAlert2\n//       Swal.fire({\n//         title: 'Success!',\n//         text: 'Donor Registered Successfully!',\n//         icon: 'success',\n//         confirmButtonText: 'Okay',\n//       });\n\n//       // Optionally reset form after submission\n//       setName('');\n//       setAge('');\n//       setContactNumber('');\n//       setBloodGroup('');\n\n//     } catch (error) {\n//       console.log('Error adding document: ', error);\n//       // Handle errors gracefully\n//       Swal.fire({\n//         title: 'Error!',\n//         text: 'There was an issue registering the donor. Please try again.',\n//         icon: 'error',\n//         confirmButtonText: 'Try Again',\n//       });\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <center>\n//         <h2>Register as A Blood Donor</h2>\n//         <form >\n//           <label htmlFor=\"name\">Name:</label>\n//           <input\n//             type=\"text\"\n//             name=\"Name\"\n//             id=\"name\"\n//             value={Name}\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"number\">Number:</label>\n//           <input\n//             type=\"number\"\n//             name=\"number\"\n//             id=\"number\"\n//             value={ContactNumber}\n//             onChange={(e) => setContactNumber(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"age\">Age:</label>\n//           <input\n//             type=\"number\"\n//             name=\"age\"\n//             id=\"age\"\n//             value={Age}\n//             onChange={(e) => setAge(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"bloodgroup\">Blood Group:</label>\n//           <input\n//             type=\"text\"\n//             name=\"bloodgroup\"\n//             id=\"bloodgroup\"\n//             value={BloodGroup}\n//             onChange={(e) => setBloodGroup(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <button onClick={DonateSubmit}>Donate Blood</button>\n//         </form>\n//       </center>\n//     </div>\n//   );\n// };\n\n// export default Hero;\nimport React, { useState } from \"react\";\ngetDocs;\nimport '../styles/hero.css';\nimport { collection, db, getDocs } from \"../init-firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const [doners, setDoners] = useState([]); // State to store donors\n  const [loading, setLoading] = useState(false); // Loading state\n  const [showDonors, setShowDonors] = useState(false); // State to track when to show donor data\n\n  // Function to fetch donors when Donate Blood button is clicked\n  const fetchDonors = async () => {\n    setLoading(true); // Start loading\n    setShowDonors(true); // Show donor list after fetching\n\n    try {\n      const donorCollection = collection(db, \"donors\"); // Reference to donors collection\n      const donorSnapshot = await getDocs(donorCollection); // Get donor data\n      const donorList = donorSnapshot.docs.map(doc => doc.data()); // Map through the docs to get data\n      setDoners(donorList); // Set the fetched donor data to state\n    } catch (error) {\n      console.error(\"Error fetching donors: \", error);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hero-title\",\n        children: \"Help Save Lives, Donate Blood Today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hero-description\",\n        children: \"Your donation can make a huge difference in someone's life.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchDonors,\n          className: \"hero-button donate-button\",\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {/* You can add a function for find donor here */},\n          className: \"hero-button find-button\",\n          children: \"Find Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading donors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }, this), showDonors && doners.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donor-list\",\n      children: doners.map((doner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doner\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", doner.Name || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", doner.Age || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact Number: \", doner.ContactNumber || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Blood Group: \", doner.BloodGroup || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), doners.length === 0 && !loading && showDonors && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No donors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 57\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"AQOvUbGumPcyx2PYMY+i/OIP2SE=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","getDocs","collection","db","jsxDEV","_jsxDEV","Hero","_s","doners","setDoners","loading","setLoading","showDonors","setShowDonors","fetchDonors","donorCollection","donorSnapshot","donorList","docs","map","doc","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","doner","index","style","marginBottom","Name","Age","ContactNumber","BloodGroup","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/Herosec.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Swal from \"sweetalert2\";\r\n// import { collection, addDoc } from \"firebase/firestore\";\r\n// import { db } from \"../init-firebase\"; // Correct import\r\n\r\n// const Hero = () => {\r\n//   const [Name, setName] = useState('');\r\n//   const [Age, setAge] = useState('');\r\n//   const [ContactNumber, setContactNumber] = useState('');\r\n//   const [BloodGroup, setBloodGroup] = useState('');\r\n\r\n//   const DonateSubmit = async (e) => {\r\n//     e.preventDefault(); // Prevent the form from refreshing the page\r\n//     try {\r\n//       // Add donor data to Firestore using modular API\r\n//       await addDoc(collection(db, 'doners'), {\r\n//         Name,\r\n//         Age,\r\n//         ContactNumber,\r\n//         BloodGroup,\r\n//       });\r\n\r\n//       // Show a success alert using SweetAlert2\r\n//       Swal.fire({\r\n//         title: 'Success!',\r\n//         text: 'Donor Registered Successfully!',\r\n//         icon: 'success',\r\n//         confirmButtonText: 'Okay',\r\n//       });\r\n\r\n//       // Optionally reset form after submission\r\n//       setName('');\r\n//       setAge('');\r\n//       setContactNumber('');\r\n//       setBloodGroup('');\r\n\r\n//     } catch (error) {\r\n//       console.log('Error adding document: ', error);\r\n//       // Handle errors gracefully\r\n//       Swal.fire({\r\n//         title: 'Error!',\r\n//         text: 'There was an issue registering the donor. Please try again.',\r\n//         icon: 'error',\r\n//         confirmButtonText: 'Try Again',\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <center>\r\n//         <h2>Register as A Blood Donor</h2>\r\n//         <form >\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"Name\"\r\n//             id=\"name\"\r\n//             value={Name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"number\">Number:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"number\"\r\n//             id=\"number\"\r\n//             value={ContactNumber}\r\n//             onChange={(e) => setContactNumber(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"age\">Age:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"age\"\r\n//             id=\"age\"\r\n//             value={Age}\r\n//             onChange={(e) => setAge(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"bloodgroup\">Blood Group:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"bloodgroup\"\r\n//             id=\"bloodgroup\"\r\n//             value={BloodGroup}\r\n//             onChange={(e) => setBloodGroup(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <button onClick={DonateSubmit}>Donate Blood</button>\r\n//         </form>\r\n//       </center>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Hero;\r\nimport React, { useState } from \"react\";\r\ngetDocs\r\nimport '../styles/hero.css'\r\nimport { collection, db, getDocs } from \"../init-firebase\";\r\n\r\nconst Hero = () => {\r\n  const [doners, setDoners] = useState([]); // State to store donors\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [showDonors, setShowDonors] = useState(false); // State to track when to show donor data\r\n\r\n  // Function to fetch donors when Donate Blood button is clicked\r\n  const fetchDonors = async () => {\r\n    setLoading(true); // Start loading\r\n    setShowDonors(true); // Show donor list after fetching\r\n\r\n    try {\r\n      const donorCollection = collection(db, \"donors\"); // Reference to donors collection\r\n      const donorSnapshot = await getDocs(donorCollection); // Get donor data\r\n      const donorList = donorSnapshot.docs.map((doc) => doc.data()); // Map through the docs to get data\r\n      setDoners(donorList); // Set the fetched donor data to state\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors: \", error);\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <div className=\"hero-overlay\"></div>\r\n      <div className=\"hero-content\">\r\n        <h1 className=\"hero-title\">\r\n          Help Save Lives, Donate Blood Today!\r\n        </h1>\r\n        <p className=\"hero-description\">\r\n          Your donation can make a huge difference in someone's life.\r\n        </p>\r\n        <div className=\"hero-buttons\">\r\n          {/* Donate Blood Button */}\r\n          <button \r\n            onClick={fetchDonors} \r\n            className=\"hero-button donate-button\"\r\n          >\r\n            Donate Blood\r\n          </button>\r\n\r\n          {/* Find Donor Button (you can implement this separately as needed) */}\r\n          <button \r\n            onClick={() => {/* You can add a function for find donor here */}} \r\n            className=\"hero-button find-button\"\r\n          >\r\n            Find Donor\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Show loading message */}\r\n      {loading && <p>Loading donors...</p>}\r\n\r\n      {/* Show donor data */}\r\n      {showDonors && doners.length > 0 && (\r\n        <div className=\"donor-list\">\r\n          {doners.map((doner, index) => (\r\n            <div key={index} className=\"doner\" style={{ marginBottom: \"20px\" }}>\r\n              <h3>Name: {doner.Name || \"N/A\"}</h3>\r\n              <p>Age: {doner.Age || \"N/A\"}</p>\r\n              <p>Contact Number: {doner.ContactNumber || \"N/A\"}</p>\r\n              <p>Blood Group: {doner.BloodGroup || \"N/A\"}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* If no donors are found */}\r\n      {doners.length === 0 && !loading && showDonors && <p>No donors found.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}