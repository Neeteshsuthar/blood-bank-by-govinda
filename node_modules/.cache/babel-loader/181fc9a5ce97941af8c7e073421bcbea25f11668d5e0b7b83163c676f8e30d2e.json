{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\",\n  _s = $RefreshSig$();\nimport Swal from \"sweetalert2\";\nimport React, { useState } from \"react\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport Mycontext from \"./Mycontext\";\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Signup Function \n  const navigate = useNavigate();\n  const SignupFirebase = async (name, email, password, url, address, doners, role) => {\n    if (name && email && password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        await setDoc(doc(db, \"users\", user.uid), {\n          name: name,\n          email: email,\n          role: role,\n          password: password,\n          uid: user.uid,\n          url: url,\n          doners: doners,\n          address: address,\n          createdAt: new Date()\n        });\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\n        console.log(\"User saved to Firestore:\", user);\n\n        // Debug and navigate\n        console.log(\"Navigating to home\");\n        navigate(\"/home\");\n      } catch (error) {\n        console.error(\"Error signing up:\", error.message);\n        Swal.fire(\"Error signing up. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // SignIn Exist User\n\n  const SignInfirebase = async (email, password) => {\n    if (email && password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\n        console.log(\"Signed in user:\", user);\n        navigate('home');\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n        Swal.fire(\"Error signing In. Please try again.\");\n        navigate('/home');\n      }\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // Forget Password Function\n  const ForgetPassword = async email => {\n    if (email) {\n      try {\n        await sendPasswordResetEmail(auth, email);\n        Swal.fire(\"Password reset email sent successfully!\");\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Swal.fire(\"Error resetting password. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please provide your email.\");\n    }\n  };\n  const updateUserProfile = async userData => {\n    if (!currentUser) return;\n    const userRef = doc(db, \"users\", currentUser.uid); // Reference to the user's document in Firestore\n    await updateDoc(userRef, userData); // Update the document with the new data\n  };\n  // Provider Component Return\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword,\n      updateUserProfile,\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Myprovider, \"t9nAVuIKfuxK37/9+LGfo5lqFhk=\", false, function () {\n  return [useNavigate];\n});\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","React","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","Mycontext","doc","setDoc","updateDoc","useNavigate","jsxDEV","_jsxDEV","Myprovider","children","_s","currentUser","setCurrentUser","navigate","SignupFirebase","name","email","password","url","address","doners","role","userCredential","user","uid","createdAt","Date","fire","console","log","error","message","SignInfirebase","ForgetPassword","updateUserProfile","userData","userRef","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React, { useState } from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport { doc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Myprovider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n \r\n  // Signup Function \r\n  const navigate=useNavigate()\r\n  const SignupFirebase = async (name, email, password, url, address,doners,role) => {\r\n    if (name && email && password) {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n  \r\n        await setDoc(doc(db, \"users\", user.uid), {\r\n          name: name,\r\n          email: email,\r\n          role:role,\r\n          password: password,\r\n          uid: user.uid,\r\n          url:url,\r\n          doners:doners,\r\n          address: address,\r\n          createdAt: new Date(),\r\n        });\r\n  \r\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\r\n        console.log(\"User saved to Firestore:\", user);\r\n  \r\n        // Debug and navigate\r\n        console.log(\"Navigating to home\");\r\n        navigate(\"/home\");\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error signing up:\", error.message);\r\n        Swal.fire(\"Error signing up. Please try again.\");\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n  // SignIn Exist User\r\n\r\n  const SignInfirebase = async (email, password) => {\r\n    if (email && password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\r\n        console.log(\"Signed in user:\", user);\r\n        navigate('home')\r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        Swal.fire(\"Error signing In. Please try again.\");\r\n        navigate('/home')\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n  // Forget Password Function\r\n  const ForgetPassword = async (email) => {\r\n    if (email) {\r\n      try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please provide your email.\");\r\n    }\r\n  };\r\n  const updateUserProfile = async (userData) => {\r\n    if (!currentUser) return;\r\n  \r\n    const userRef = doc(db, \"users\", currentUser.uid); // Reference to the user's document in Firestore\r\n    await updateDoc(userRef, userData); // Update the document with the new data\r\n  };\r\n  // Provider Component Return\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase,ForgetPassword ,updateUserProfile ,currentUser}}\r\n    >\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}