{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\Herosec.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Swal from \"sweetalert2\";\n// import { collection, addDoc } from \"firebase/firestore\";\n// import { db } from \"../init-firebase\"; // Correct import\n\n// const Hero = () => {\n//   const [Name, setName] = useState('');\n//   const [Age, setAge] = useState('');\n//   const [ContactNumber, setContactNumber] = useState('');\n//   const [BloodGroup, setBloodGroup] = useState('');\n\n//   const DonateSubmit = async (e) => {\n//     e.preventDefault(); // Prevent the form from refreshing the page\n//     try {\n//       // Add donor data to Firestore using modular API\n//       await addDoc(collection(db, 'doners'), {\n//         Name,\n//         Age,\n//         ContactNumber,\n//         BloodGroup,\n//       });\n\n//       // Show a success alert using SweetAlert2\n//       Swal.fire({\n//         title: 'Success!',\n//         text: 'Donor Registered Successfully!',\n//         icon: 'success',\n//         confirmButtonText: 'Okay',\n//       });\n\n//       // Optionally reset form after submission\n//       setName('');\n//       setAge('');\n//       setContactNumber('');\n//       setBloodGroup('');\n\n//     } catch (error) {\n//       console.log('Error adding document: ', error);\n//       // Handle errors gracefully\n//       Swal.fire({\n//         title: 'Error!',\n//         text: 'There was an issue registering the donor. Please try again.',\n//         icon: 'error',\n//         confirmButtonText: 'Try Again',\n//       });\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <center>\n//         <h2>Register as A Blood Donor</h2>\n//         <form >\n//           <label htmlFor=\"name\">Name:</label>\n//           <input\n//             type=\"text\"\n//             name=\"Name\"\n//             id=\"name\"\n//             value={Name}\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"number\">Number:</label>\n//           <input\n//             type=\"number\"\n//             name=\"number\"\n//             id=\"number\"\n//             value={ContactNumber}\n//             onChange={(e) => setContactNumber(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"age\">Age:</label>\n//           <input\n//             type=\"number\"\n//             name=\"age\"\n//             id=\"age\"\n//             value={Age}\n//             onChange={(e) => setAge(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <label htmlFor=\"bloodgroup\">Blood Group:</label>\n//           <input\n//             type=\"text\"\n//             name=\"bloodgroup\"\n//             id=\"bloodgroup\"\n//             value={BloodGroup}\n//             onChange={(e) => setBloodGroup(e.target.value)}\n//           />\n//           <br /><br />\n\n//           <button onClick={DonateSubmit}>Donate Blood</button>\n//         </form>\n//       </center>\n//     </div>\n//   );\n// };\n\n// export default Hero;\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\nimport '../styles/'; // Import your custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const navigate = useNavigate(); // Use the useNavigate hook for navigation\n\n  // Navigate to Donate Blood page\n  const handleDonateBloodClick = () => {\n    navigate(\"/donate\"); // Navigate to the '/donate' route\n  };\n\n  // Navigate to Find Donor page\n  const handleFindDonorClick = () => {\n    navigate(\"/find-donor\"); // Navigate to the '/find-donor' route\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hero-title\",\n        children: \"Help Save Lives, Donate Blood Today!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hero-description\",\n        children: \"Your donation can make a huge difference in someone's life.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDonateBloodClick,\n          className: \"hero-button donate-button\",\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindDonorClick,\n          className: \"hero-button find-button\",\n          children: \"Find Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Hero","_s","navigate","handleDonateBloodClick","handleFindDonorClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/Herosec.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Swal from \"sweetalert2\";\r\n// import { collection, addDoc } from \"firebase/firestore\";\r\n// import { db } from \"../init-firebase\"; // Correct import\r\n\r\n// const Hero = () => {\r\n//   const [Name, setName] = useState('');\r\n//   const [Age, setAge] = useState('');\r\n//   const [ContactNumber, setContactNumber] = useState('');\r\n//   const [BloodGroup, setBloodGroup] = useState('');\r\n\r\n//   const DonateSubmit = async (e) => {\r\n//     e.preventDefault(); // Prevent the form from refreshing the page\r\n//     try {\r\n//       // Add donor data to Firestore using modular API\r\n//       await addDoc(collection(db, 'doners'), {\r\n//         Name,\r\n//         Age,\r\n//         ContactNumber,\r\n//         BloodGroup,\r\n//       });\r\n\r\n//       // Show a success alert using SweetAlert2\r\n//       Swal.fire({\r\n//         title: 'Success!',\r\n//         text: 'Donor Registered Successfully!',\r\n//         icon: 'success',\r\n//         confirmButtonText: 'Okay',\r\n//       });\r\n\r\n//       // Optionally reset form after submission\r\n//       setName('');\r\n//       setAge('');\r\n//       setContactNumber('');\r\n//       setBloodGroup('');\r\n\r\n//     } catch (error) {\r\n//       console.log('Error adding document: ', error);\r\n//       // Handle errors gracefully\r\n//       Swal.fire({\r\n//         title: 'Error!',\r\n//         text: 'There was an issue registering the donor. Please try again.',\r\n//         icon: 'error',\r\n//         confirmButtonText: 'Try Again',\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <center>\r\n//         <h2>Register as A Blood Donor</h2>\r\n//         <form >\r\n//           <label htmlFor=\"name\">Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"Name\"\r\n//             id=\"name\"\r\n//             value={Name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"number\">Number:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"number\"\r\n//             id=\"number\"\r\n//             value={ContactNumber}\r\n//             onChange={(e) => setContactNumber(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"age\">Age:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"age\"\r\n//             id=\"age\"\r\n//             value={Age}\r\n//             onChange={(e) => setAge(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <label htmlFor=\"bloodgroup\">Blood Group:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"bloodgroup\"\r\n//             id=\"bloodgroup\"\r\n//             value={BloodGroup}\r\n//             onChange={(e) => setBloodGroup(e.target.value)}\r\n//           />\r\n//           <br /><br />\r\n          \r\n//           <button onClick={DonateSubmit}>Donate Blood</button>\r\n//         </form>\r\n//       </center>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Hero;\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\r\nimport '../styles/';  // Import your custom CSS\r\n\r\nconst Hero = () => {\r\n  const navigate = useNavigate(); // Use the useNavigate hook for navigation\r\n\r\n  // Navigate to Donate Blood page\r\n  const handleDonateBloodClick = () => {\r\n    navigate(\"/donate\");  // Navigate to the '/donate' route\r\n  };\r\n\r\n  // Navigate to Find Donor page\r\n  const handleFindDonorClick = () => {\r\n    navigate(\"/find-donor\"); // Navigate to the '/find-donor' route\r\n  };\r\n\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <div className=\"hero-overlay\"></div>\r\n      <div className=\"hero-content\">\r\n        <h1 className=\"hero-title\">\r\n          Help Save Lives, Donate Blood Today!\r\n        </h1>\r\n        <p className=\"hero-description\">\r\n          Your donation can make a huge difference in someone's life.\r\n        </p>\r\n        <div className=\"hero-buttons\">\r\n          {/* Donate Blood Button */}\r\n          <button onClick={handleDonateBloodClick} className=\"hero-button donate-button\">\r\n            Donate Blood\r\n          </button>\r\n\r\n          {/* Find Donor Button */}\r\n          <button onClick={handleFindDonorClick} className=\"hero-button find-button\">\r\n            Find Donor\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;IACnCD,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAE;EACxB,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjCF,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BP,OAAA;MAAKM,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpCX,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BP,OAAA;QAAIM,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAE3B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLX,OAAA;QAAGM,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAEhC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJX,OAAA;QAAKM,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAE3BP,OAAA;UAAQY,OAAO,EAAER,sBAAuB;UAACE,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAE/E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGTX,OAAA;UAAQY,OAAO,EAAEP,oBAAqB;UAACC,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAE3E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CArCID,IAAI;EAAA,QACSH,WAAW;AAAA;AAAAe,EAAA,GADxBZ,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}