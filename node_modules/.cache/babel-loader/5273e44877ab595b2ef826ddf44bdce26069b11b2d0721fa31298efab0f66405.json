{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\Reciever.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { collection, db } from \"../init-firebase\";\nimport { getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reciever = () => {};\n_c = Reciever;\nconst [Doners, setDoners] = useState([]);\nconst [loading, setLoading] = useState(true); // To handle loading state\nconst ShowDonerdata = () => {\n  _s();\n  useEffect(() => {\n    const GetDonersdata = async () => {\n      try {\n        const donerCollection = collection(db, \"doners\");\n        const donerSnapshot = await getDocs(donerCollection);\n\n        // Map donor data and save it in state\n        const donerList = donerSnapshot.docs.map(doc => doc.data());\n        setDoners(donerList);\n      } catch (error) {\n        console.error(\"Error fetching donor data: \", error);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched or on error\n      }\n    };\n    GetDonersdata();\n  }, []);\n\n  // Function to handle contacting the donor\n  const contactDonor = contactNumber => {\n    // Example: Use phone number for contact\n    alert(`You can contact the donor at: ${contactNumber}`);\n    // Or open the phone dialer (useful on mobile)\n    // window.location.href = `tel:${contactNumber}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Available Donor Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading donors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), Doners.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this), Doners.map((doner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donor\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", doner.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", doner.Age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact Number: \", doner.ContactNumber || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Blood Group: \", doner.BloodGroup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => contactDonor(doner.ContactNumber),\n          children: \"Contact Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowDonerdata, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = ShowDonerdata;\nexport default Reciever;\nvar _c, _c2;\n$RefreshReg$(_c, \"Reciever\");\n$RefreshReg$(_c2, \"ShowDonerdata\");","map":{"version":3,"names":["React","useEffect","useState","collection","db","getDocs","jsxDEV","_jsxDEV","Reciever","_c","Doners","setDoners","loading","setLoading","ShowDonerdata","_s","GetDonersdata","donerCollection","donerSnapshot","donerList","docs","map","doc","data","error","console","contactDonor","contactNumber","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","doner","index","className","style","marginBottom","Name","Age","ContactNumber","BloodGroup","onClick","_c2","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/Reciever.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { collection, db } from \"../init-firebase\";\r\nimport { getDocs } from \"firebase/firestore\";\r\n\r\nconst Reciever = () => {}\r\n  const [Doners, setDoners] = useState([]);\r\n  const [loading, setLoading] = useState(true); // To handle loading state\r\nconst ShowDonerdata=()=>{\r\n  useEffect(() => {\r\n    const GetDonersdata = async () => {\r\n      try {\r\n        const donerCollection = collection(db, \"doners\");\r\n        const donerSnapshot = await getDocs(donerCollection);\r\n\r\n        // Map donor data and save it in state\r\n        const donerList = donerSnapshot.docs.map((doc) => doc.data());\r\n        setDoners(donerList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching donor data: \", error);\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched or on error\r\n      }\r\n    };\r\n\r\n    GetDonersdata();\r\n  }, []);\r\n\r\n  // Function to handle contacting the donor\r\n  const contactDonor = (contactNumber) => {\r\n    // Example: Use phone number for contact\r\n    alert(`You can contact the donor at: ${contactNumber}`);\r\n    // Or open the phone dialer (useful on mobile)\r\n    // window.location.href = `tel:${contactNumber}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h1>Available Donor Data</h1>\r\n        {loading && <p>Loading donors...</p>}\r\n        {Doners.length === 0 && !loading && <p>No donors found.</p>}\r\n\r\n         {Doners.map((doner, index) => (\r\n          <div key={index} className=\"donor\" style={{ marginBottom: \"20px\" }}>\r\n            <h3>Name: {doner.Name }</h3>\r\n            <p>Age: {doner.Age }</p>\r\n            <p>Contact Number: {doner.ContactNumber || \"N/A\"}</p>\r\n            <p>Blood Group: {doner.BloodGroup }</p>\r\n            <button onClick={() => contactDonor(doner.ContactNumber)}>\r\n              Contact Donor\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reciever;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}