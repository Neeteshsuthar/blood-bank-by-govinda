{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\UserList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getDocs, collection } from \"firebase/firestore\";\nimport { db } from \"../init-firebase\"; // Ensure you have your Firestore initialized properly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        const usersData = querySnapshot.docs.map(doc => doc.data()); // Extract data properly\n        setUsers(usersData); // Set the extracted data\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching users: \", error);\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this); // Show a loading state\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), users.length > 0 ? users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Blood Group: \", user.bloodGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", user.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), user.url && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.url,\n        alt: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","getDocs","collection","db","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","loading","setLoading","fetchUsers","querySnapshot","usersData","docs","map","doc","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","user","index","name","email","bloodGroup","address","url","src","alt","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/UserList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getDocs, collection } from \"firebase/firestore\";\r\nimport { db } from \"../init-firebase\";  // Ensure you have your Firestore initialized properly\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        const usersData = querySnapshot.docs.map(doc => doc.data()); // Extract data properly\r\n        setUsers(usersData);  // Set the extracted data\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users: \", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>; // Show a loading state\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      {users.length > 0 ? (\r\n        users.map((user, index) => (\r\n          <div key={index}>\r\n            <p>Name: {user.name}</p> {/* Render primitive values */}\r\n            <p>Email: {user.email}</p>\r\n            <p>Blood Group: {user.bloodGroup}</p>\r\n            <p>Address: {user.address}</p>\r\n            {user.url && <img src={user.url} alt={user.name} />} {/* Render image if available */}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No users found.</p> \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}