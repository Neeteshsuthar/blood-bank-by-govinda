{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, query, where, onSnapshot, getDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { auth, db } from \"../init-firebase\";\nimport Swal from \"sweetalert2\";\nimport { Helmet } from \"react-helmet\";\nimport '../styles/home.css';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [canDonate, setCanDonate] = useState('');\n  const [currentUser, setCurrentUser] = use;\n  const [ContactNo, setContactNo] = useState(\"\");\n  const [donors, setDonors] = useState([]);\n  useEffect(() => {\n    const fetchDonors = async () => {\n      try {\n        const donorsCollection = collection(db, \"BloodDoners\");\n\n        // Using onSnapshot for real-time updates\n        const unsubscribe = onSnapshot(donorsCollection, snapshot => {\n          const donorData = snapshot.docs.map(doc => doc.data());\n          setDonors(donorData);\n        });\n\n        // Cleanup the subscription when the component unmounts\n        return unsubscribe;\n      } catch (error) {\n        console.error(\"Error fetching donors:\", error);\n        Swal.fire(\"Error\", \"Failed to fetch donors data\", \"error\");\n      }\n    };\n    fetchDonors();\n  }, []); // Empty dependency array means it runs only once after the component mounts\n\n  // Function to handle donation\n  const DonateButton = async () => {\n    if (!currentUser) {\n      Swal.fire(\"You must be logged in to donate blood.\");\n      return;\n    }\n    try {\n      const userId = currentUser.uid; // Use currentUser's UID\n      const userRef = doc(db, \"SinupUser\", userId);\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        const userData = userSnap.data();\n        if (userData.hasDonated) {\n          Swal.fire(\"You have already donated blood. Please sign up again to donate again.\");\n          return;\n        }\n\n        // Allow donation and update Firestore\n        await addDoc(collection(db, \"BloodDoners\"), {\n          DonerName: userData.Name,\n          DonerBloodGroup: userData.UserBloodGroup,\n          CityName: userData.CityName,\n          ContactNo: userData.ContactNo,\n          DonationDate: new Date()\n        });\n        await updateDoc(userRef, {\n          hasDonated: true\n        });\n        Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\n      } else {\n        Swal.fire(\"User not found.\");\n      }\n    } catch (error) {\n      console.error(\"Error handling donation:\", error.message);\n      Swal.fire(\"Error processing your donation. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    const checkDonationStatus = async userId => {\n      const userRef = doc(db, \"SinupUser\", userId);\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        const userData = userSnap.data();\n        setCanDonate(!userData.DonatedBlood); // Enable button only if hasDonated is false\n      }\n    };\n    checkDonationStatus(currentUser.uid); // Replace `currentUser.uid` with logged-in user's ID\n  }, [currentUser]);\n\n  // Function to find donors based on selected blood group and city\n  const FindDoner = async () => {\n    if (!bloodGroup || !city) {\n      Swal.fire(\"Please add both city and blood group\");\n      return;\n    }\n    try {\n      const matchData = query(collection(db, \"BloodDoners\"), where(\"DonerBloodGroup\", \"==\", bloodGroup), where(\"CityName\", \"==\", city));\n      const querySnapshot = await getDocs(matchData);\n      const matchedDonors = querySnapshot.docs.map(doc => ({\n        name: doc.data().DonerName,\n        age: doc.data().DonerAge,\n        bloodGroup: doc.data().DonerBloodGroup,\n        contactNo: doc.data().ContacNo,\n        city: doc.data().CityName\n      }));\n      setDonors(matchedDonors); // Update donor list based on search criteria\n    } catch (error) {\n      console.error(\"Error fetching donors:\", error);\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: \"Blood Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-toggle\",\n        onClick: \"toggleNavbar()\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/profile\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Blood Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter Your Age\",\n        value: age,\n        onChange: e => setAge(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Blood Group\",\n        value: bloodGroup,\n        onChange: e => setBloodGroup(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Contact NO\",\n        value: ContactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => DonateButton(currentUser),\n          disabled: !canDonate,\n          className: `btn donate-btn ${canDonate ? \"enabled\" : \"disabled\"}`,\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: FindDoner,\n          className: \"btn find-btn\",\n          children: \"Find Donor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donor-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Donor List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), donors.length > 0 ? donors.map((doner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donor-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 18\n          }, this), \" \", doner.DonerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 18\n          }, this), \" \", doner.DonerAge]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 18\n          }, this), \" \", doner.ContacNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Group:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 18\n          }, this), \" \", doner.DonerBloodGroup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 18\n          }, this), \" \", doner.CityName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donors found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"V3azp0f63WsSs/J0bl3lPYurrGE=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","query","where","onSnapshot","getDoc","doc","updateDoc","auth","db","Swal","Helmet","onAuthStateChanged","jsxDEV","_jsxDEV","HomePage","_s","bloodGroup","setBloodGroup","city","setCity","name","setName","age","setAge","canDonate","setCanDonate","currentUser","setCurrentUser","use","ContactNo","setContactNo","donors","setDonors","fetchDonors","donorsCollection","unsubscribe","snapshot","donorData","docs","map","data","error","console","fire","DonateButton","userId","uid","userRef","userSnap","exists","userData","hasDonated","DonerName","Name","DonerBloodGroup","UserBloodGroup","CityName","DonationDate","Date","message","checkDonationStatus","DonatedBlood","FindDoner","matchData","querySnapshot","matchedDonors","DonerAge","contactNo","ContacNo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","type","placeholder","value","onChange","e","target","disabled","length","doner","index","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { collection, addDoc, getDocs, query, where, onSnapshot, getDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { auth, db } from \"../init-firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport '../styles/home.css';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nconst HomePage = () => {\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [canDonate,setCanDonate]=useState('')\r\n  const [currentUser,setCurrentUser]=use\r\n  const [ContactNo, setContactNo] = useState(\"\");\r\n  const [donors, setDonors] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchDonors = async () => {\r\n      try {\r\n      const donorsCollection = collection(db, \"BloodDoners\");\r\n\r\n        // Using onSnapshot for real-time updates\r\n        const unsubscribe = onSnapshot(donorsCollection, (snapshot) => {\r\n          const donorData = snapshot.docs.map((doc) => doc.data());\r\n          setDonors(donorData);  \r\n        });\r\n\r\n        // Cleanup the subscription when the component unmounts\r\n        return unsubscribe;\r\n      } catch (error) {\r\n        console.error(\"Error fetching donors:\", error);\r\n        Swal.fire(\"Error\", \"Failed to fetch donors data\", \"error\");\r\n      }\r\n    };\r\n\r\n    fetchDonors();\r\n  }, []);  // Empty dependency array means it runs only once after the component mounts\r\n\r\n  // Function to handle donation\r\n  const DonateButton = async () => {\r\n    if (!currentUser) {\r\n      Swal.fire(\"You must be logged in to donate blood.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const userId = currentUser.uid; // Use currentUser's UID\r\n      const userRef = doc(db, \"SinupUser\", userId);\r\n      const userSnap = await getDoc(userRef);\r\n  \r\n      if (userSnap.exists()) {\r\n        const userData = userSnap.data();\r\n  \r\n        if (userData.hasDonated) {\r\n          Swal.fire(\"You have already donated blood. Please sign up again to donate again.\");\r\n          return;\r\n        }\r\n  \r\n        // Allow donation and update Firestore\r\n        await addDoc(collection(db, \"BloodDoners\"), {\r\n          DonerName: userData.Name,\r\n          DonerBloodGroup: userData.UserBloodGroup,\r\n          CityName: userData.CityName,\r\n          ContactNo: userData.ContactNo,\r\n          DonationDate: new Date(),\r\n        });\r\n  \r\n        await updateDoc(userRef, { hasDonated: true });\r\n  \r\n        Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\r\n      } else {\r\n        Swal.fire(\"User not found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error handling donation:\", error.message);\r\n      Swal.fire(\"Error processing your donation. Please try again.\");\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const checkDonationStatus = async (userId) => {\r\n      const userRef = doc(db, \"SinupUser\", userId);\r\n      const userSnap = await getDoc(userRef);\r\n  \r\n      if (userSnap.exists()) {\r\n        const userData = userSnap.data();\r\n        setCanDonate(!userData.DonatedBlood); // Enable button only if hasDonated is false\r\n      }\r\n    };\r\n  \r\n    checkDonationStatus(currentUser.uid); // Replace `currentUser.uid` with logged-in user's ID\r\n  }, [currentUser]);\r\n  \r\n  // Function to find donors based on selected blood group and city\r\n  const FindDoner = async () => {\r\n    if (!bloodGroup || !city) {\r\n      Swal.fire(\"Please add both city and blood group\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const matchData = query(\r\n        collection(db, \"BloodDoners\"),\r\n        where(\"DonerBloodGroup\", \"==\", bloodGroup),\r\n        where(\"CityName\", \"==\", city)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(matchData);\r\n      const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n        name: doc.data().DonerName,\r\n        age: doc.data().DonerAge,\r\n        bloodGroup: doc.data().DonerBloodGroup,\r\n        contactNo: doc.data().ContacNo,\r\n        city: doc.data().CityName,\r\n      }));\r\n      setDonors(matchedDonors);  // Update donor list based on search criteria\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors:\", error);\r\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Helmet><title>HomePage</title></Helmet>\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar-brand\">Blood Bank</div>\r\n        <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        <div className=\"navbar-links\">\r\n          <a href=\"#\">Home</a>\r\n          <a href=\"#\">Donate</a>\r\n          <a href=\"/profile\">Profile</a>\r\n          <a href=\"#\">Contact Us</a>\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"title\">Blood Bank</h1>\r\n      <div className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter Your Age\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Blood Group\"\r\n          value={bloodGroup}\r\n          onChange={(e) => setBloodGroup(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter City\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Contact NO\"\r\n          value={ContactNo}\r\n          onChange={(e) => setContactNo(e.target.value)}\r\n        />\r\n\r\n        <div className=\"button-group\">\r\n          <button onClick={()=>DonateButton(currentUser)}\r\n          disabled={!canDonate} \r\n          className={`btn donate-btn ${canDonate ? \"enabled\" : \"disabled\"}`}>\r\n            Donate Blood\r\n          </button>\r\n          <button onClick={FindDoner} className=\"btn find-btn\">\r\n            Find Donor\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"donor-list\">\r\n        <h2>Donor List</h2>\r\n        {donors.length > 0 ? (\r\n          donors.map((doner, index) => (\r\n            <div key={index} className=\"donor-card\">\r\n              <p><strong>Name:</strong> {doner.DonerName}</p>\r\n              <p><strong>Age:</strong> {doner.DonerAge}</p>\r\n              <p><strong>Contact No:</strong> {doner.ContacNo}</p>\r\n              <p><strong>Blood Group:</strong> {doner.DonerBloodGroup}</p>\r\n              <p><strong>City:</strong> {doner.CityName}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No donors found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}