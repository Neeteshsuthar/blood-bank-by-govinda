{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\",\n  _s = $RefreshSig$();\nimport Swal from \"sweetalert2\";\nimport React from \"react\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\nimport Mycontext from \"./Mycontext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  _s();\n  const Navigate = useNavigate();\n  const SignupFirebase = async (name, email, password, doners, Age, Contact) => {\n    if (name && email && password) {\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed up \n        const user = userCredential.user;\n        setDoc(doc(db, \"SinupUser\", user.uid), {\n          Name: name,\n          UserEmail: email,\n          UserPassword: password,\n          Who: doners,\n          hasDonated: false\n        });\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\n        console.log(\"User saved to Firestore:\", user);\n        Navigate('/login');\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"Error signing up:\", errorCode, errorMessage);\n        Swal.fire(\"Error signing up. Please try again.\");\n      });\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // SignIn Exist User\n\n  const SignInfirebase = async (email, password) => {\n    if (email && password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\n        console.log(\"Signed in user:\", user);\n        Navigate('/home');\n        setDoc(doc(db, \"siginnInUser\", user.uid), {\n          userEmail: email,\n          userPassword: password\n        });\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n        Swal.fire(\"Error signing In. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // Forget Password Function\n  const ForgetPassword = async email => {\n    if (email) {\n      try {\n        await sendPasswordResetEmail(auth, email);\n        Swal.fire(\"Password reset email sent successfully!\");\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Swal.fire(\"Error resetting password. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please provide your email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Myprovider, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","React","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","addDoc","doc","setDoc","Mycontext","useNavigate","jsxDEV","_jsxDEV","Myprovider","children","_s","Navigate","SignupFirebase","name","email","password","doners","Age","Contact","then","userCredential","user","uid","Name","UserEmail","UserPassword","Who","hasDonated","fire","console","log","catch","error","errorCode","code","errorMessage","message","SignInfirebase","userEmail","userPassword","ForgetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport { addDoc, doc, setDoc } from \"firebase/firestore\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport {useNavigate } from \"react-router-dom\";\r\n\r\n      const Myprovider = ({ children }) => {\r\n         const Navigate=useNavigate()\r\n         const SignupFirebase = async (name, email, password,doners,Age,Contact) => {\r\n         if (name && email && password) {\r\n         createUserWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n        // Signed up \r\n        const user = userCredential.user;\r\n        setDoc(doc(db, \"SinupUser\", user.uid),{\r\n          Name:name,UserEmail:email,UserPassword:password,Who:doners,hasDonated:false,\r\n        })\r\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\r\n        console.log(\"User saved to Firestore:\", user);\r\n        Navigate('/login')\r\n       }) \r\n    .catch((error) => {\r\n     const errorCode = error.code;\r\n     const errorMessage = error.message;\r\n     console.log(\"Error signing up:\", errorCode,errorMessage);\r\n     Swal.fire(\"Error signing up. Please try again.\");\r\n  });\r\n  \r\n  }else{\r\n  Swal.fire(\"Please fill all fields.\");\r\n}\r\n  };\r\n  // SignIn Exist User\r\n\r\n     const SignInfirebase = async (email, password) => {\r\n     if (email && password) {\r\n        try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\r\n        console.log(\"Signed in user:\", user); \r\n        Navigate('/home')\r\n       setDoc(doc(db,\"siginnInUser\",user.uid),{\r\n        userEmail:email,userPassword:password\r\n       })\r\n        } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        Swal.fire(\"Error signing In. Please try again.\");\r\n       \r\n       \r\n      }\r\n      } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n         // Forget Password Function\r\n         const ForgetPassword = async (email) => {\r\n         if (email) {\r\n        try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n        } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n        }\r\n        } else {\r\n        Swal.fire(\"Please provide your email.\");\r\n     }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase, ForgetPassword}}>\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}