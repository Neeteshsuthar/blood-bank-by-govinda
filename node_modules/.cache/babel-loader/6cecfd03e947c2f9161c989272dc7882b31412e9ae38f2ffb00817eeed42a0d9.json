{"ast":null,"code":"import Swal from\"sweetalert2\";import React from\"react\";import{auth,createUserWithEmailAndPassword,signInWithEmailAndPassword,sendPasswordResetEmail,db}from\"../init-firebase\";import{doc,setDoc}from\"firebase/firestore\";import Mycontext from\"./Mycontext\";import{useNavigate}from\"react-router-dom\";import{updateProfile}from\"firebase/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";const Myprovider=_ref=>{let{children}=_ref;const Navigate=useNavigate();const SignupFirebase=async(name,email,password,doners,Age,contact,city,url)=>{if(!password||password.length<8||password.length>20||!/[a-z]/.test(password)){Swal.fire(\"Password must be between 8-20 characters, contain at least one lowercase letter letter, one number.\");return false;}if(name&&email&&password){createUserWithEmailAndPassword(auth,email,password).then(userCredential=>{// Signed up \nconst user=userCredential.user;updateProfile(auth.currentUser,{displayName:name});setDoc(doc(db,\"SinupUser\",user.uid),{Name:name,UserEmail:email,UserPassword:password,Who:doners,age:Age,city:city,mobilt:contact,url:url});Swal.fire(`Wow ${name}, good job! Now  registered successfully.`);console.log(\"User saved to Firestore:\",user);Navigate('/login');}).catch(error=>{const errorCode=error.code;const errorMessage=error.message;console.log(\"Error signing up:\",errorCode,errorMessage);Swal.fire(\"Error signing up. Please try again.\");});}else{Swal.fire(\"Please fill all fields.\");}};// SignIn Exist User\nconst SignInfirebase=async(email,password)=>{if(email&&password){try{const userCredential=await signInWithEmailAndPassword(auth,email,password);const user=userCredential.user;Swal.fire(`Wow , Great! .`);console.log(\"Signed in user:\",user);await setDoc(doc(db,\"signinInUser\",user.uid),{userEmail:email,userPassword:password,userId:userCredential===null||userCredential===void 0?void 0:userCredential.user.uid});Navigate(\"/home\");}catch(error){console.error(\"Error signing in:\",error.message);Swal.fire(\"Error signing in. check your password.\");}}else{Swal.fire(\"Please fill all fields.\");}};const ForgetPassword=async email=>{if(email){try{await sendPasswordResetEmail(auth,email);Swal.fire(\"Password reset email sent successfully!\");}catch(error){console.error(\"Error resetting password:\",error.message);Swal.fire(\"Error resetting password. Please try again.\");}}else{Swal.fire(\"Please provide your email.\");}};return/*#__PURE__*/_jsx(Mycontext.Provider,{value:{SignupFirebase,SignInfirebase,ForgetPassword},children:children});};export default Myprovider;","map":{"version":3,"names":["Swal","React","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","doc","setDoc","Mycontext","useNavigate","updateProfile","jsx","_jsx","Myprovider","_ref","children","Navigate","SignupFirebase","name","email","password","doners","Age","contact","city","url","length","test","fire","then","userCredential","user","currentUser","displayName","uid","Name","UserEmail","UserPassword","Who","age","mobilt","console","log","catch","error","errorCode","code","errorMessage","message","SignInfirebase","userEmail","userPassword","userId","ForgetPassword","Provider","value"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport {doc, setDoc } from \"firebase/firestore\";\r\nimport Mycontext from \"./Mycontext\";\r\nimport {useNavigate } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\n      const Myprovider = ({ children }) => {\r\n         const Navigate=useNavigate()\r\n         const SignupFirebase = async (name, email, password,doners,Age,contact,city,url) => {\r\n          \r\n            if (!password || password.length < 8 || password.length > 20 || !/[a-z]/.test(password)) {\r\n              Swal.fire(\"Password must be between 8-20 characters, contain at least one lowercase letter letter, one number.\");\r\n              return false;\r\n            }\r\n            \r\n       \r\n          \r\n         if (name && email && password) {\r\n         createUserWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n        // Signed up \r\n        const user = userCredential.user;\r\n        updateProfile(auth.currentUser, {\r\n          displayName: name,\r\n        })\r\n        setDoc(doc(db, \"SinupUser\", user.uid),\r\n        {\r\n          Name:name,\r\n          UserEmail:email,\r\n          UserPassword:password,\r\n          Who:doners,\r\n          age: Age,\r\n          city: city,\r\n          mobilt: contact,\r\n          url:url\r\n        })\r\n        Swal.fire(`Wow ${name}, good job! Now  registered successfully.`);\r\n        console.log(\"User saved to Firestore:\", user);\r\n        Navigate('/login')\r\n       }) \r\n    .catch((error) => {\r\n     const errorCode = error.code;\r\n     const errorMessage = error.message;\r\n     console.log(\"Error signing up:\", errorCode,errorMessage);\r\n     Swal.fire(\"Error signing up. Please try again.\");\r\n  });\r\n  \r\n  }else{\r\n  Swal.fire(\"Please fill all fields.\");\r\n}\r\n  };\r\n  // SignIn Exist User\r\n  const SignInfirebase = async (email, password) => {\r\n    if (email && password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n          Swal.fire(`Wow , Great! .`);\r\n          console.log(\"Signed in user:\", user);\r\n           \r\n          await setDoc(doc(db, \"signinInUser\", user.uid), {\r\n            userEmail: email,\r\n            userPassword: password,\r\n            userId:userCredential?.user.uid\r\n          });\r\n        \r\n         Navigate(\"/home\");\r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        Swal.fire(\"Error signing in. check your password.\");\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n  \r\n  const ForgetPassword = async (email) => {\r\n         if (email) {\r\n        try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n        } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n        }\r\n        } else {\r\n        Swal.fire(\"Please provide your email.\");\r\n     }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase, ForgetPassword}}>\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}