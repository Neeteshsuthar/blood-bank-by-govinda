{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\context\\\\Myprovider.jsx\";\nimport Swal from \"sweetalert2\";\nimport React from \"react\";\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport Mycontext from \"./Mycontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myprovider = ({\n  children\n}) => {\n  // Signup Function \n\n  const SignupFirebase = async (name, email, password, url, address, doners, role) => {\n    if (name && email && password) {\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed up \n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, good job! User registered successfully.\");\n        console.log(\"User saved to Firestore:\", user);\n        setDoc(doc(db, \"users\", user.uid), {\n          name: name,\n          email: email,\n          role: role,\n          password: password,\n          uid: user.uid,\n          url: url,\n          doners: doners,\n          address: address,\n          createdAt: new Date()\n        });\n\n        // ...\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.error(\"Error signing up:\", errorCode, errorMessage);\n        Swal.fire(\"Error signing up. Please try again.\");\n      });\n    }\n    //   try {\n    //     const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    //     const user = userCredential.user;\n\n    //    \n    //    \n    //     // Debug and navigate\n    //     console.log(\"Navigating to home\");\n\n    //   } catch (error) {\n    //    \n    //   }\n    // } else {\n    //   Swal.fire(\"Please fill all fields.\");\n    // }\n  };\n  // SignIn Exist User\n\n  const SignInfirebase = async (email, password) => {\n    if (email && password) {\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\n        console.log(\"Signed in user:\", user);\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n        Swal.fire(\"Error signing In. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please fill all fields.\");\n    }\n  };\n  // Forget Password Function\n  const ForgetPassword = async email => {\n    if (email) {\n      try {\n        await sendPasswordResetEmail(auth, email);\n        Swal.fire(\"Password reset email sent successfully!\");\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Swal.fire(\"Error resetting password. Please try again.\");\n      }\n    } else {\n      Swal.fire(\"Please provide your email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Mycontext.Provider, {\n    value: {\n      SignupFirebase,\n      SignInfirebase,\n      ForgetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c = Myprovider;\nexport default Myprovider;\nvar _c;\n$RefreshReg$(_c, \"Myprovider\");","map":{"version":3,"names":["Swal","React","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","db","doc","setDoc","Mycontext","jsxDEV","_jsxDEV","Myprovider","children","SignupFirebase","name","email","password","url","address","doners","role","then","userCredential","user","fire","console","log","uid","createdAt","Date","catch","error","errorCode","code","errorMessage","message","SignInfirebase","ForgetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/context/Myprovider.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, db } from \"../init-firebase\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport Mycontext from \"./Mycontext\";\r\n\r\nconst Myprovider = ({ children }) => {\r\n \r\n  // Signup Function \r\n \r\n  const SignupFirebase = async (name, email, password, url, address,doners,role) => {\r\n    \r\n    if (name && email && password) {\r\n\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed up \r\n    const user = userCredential.user;\r\n    Swal.fire(\"Wow brother, good job! User registered successfully.\");\r\n        console.log(\"User saved to Firestore:\", user);\r\n      setDoc(doc(db, \"users\", user.uid), {\r\n            name: name,\r\n            email: email,\r\n            role:role,\r\n            password: password,\r\n            uid: user.uid,\r\n            url:url,\r\n            doners:doners,\r\n            address: address,\r\n            createdAt: new Date(),\r\n          });\r\n    \r\n\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    console.error(\"Error signing up:\", errorCode,errorMessage);\r\n        Swal.fire(\"Error signing up. Please try again.\");\r\n  });\r\n}\r\n    //   try {\r\n    //     const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    //     const user = userCredential.user;\r\n  \r\n    //    \r\n    //    \r\n    //     // Debug and navigate\r\n    //     console.log(\"Navigating to home\");\r\n       \r\n  \r\n    //   } catch (error) {\r\n    //    \r\n    //   }\r\n    // } else {\r\n    //   Swal.fire(\"Please fill all fields.\");\r\n    // }\r\n  };\r\n  // SignIn Exist User\r\n\r\n  const SignInfirebase = async (email, password) => {\r\n    if (email && password) {\r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        Swal.fire(\"Wow brother, Great! Signed in successfully.\");\r\n        console.log(\"Signed in user:\", user);\r\n       \r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        Swal.fire(\"Error signing In. Please try again.\");\r\n       \r\n      }\r\n    } else {\r\n      Swal.fire(\"Please fill all fields.\");\r\n    }\r\n  };\r\n  // Forget Password Function\r\n  const ForgetPassword = async (email) => {\r\n    if (email) {\r\n      try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        Swal.fire(\"Password reset email sent successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n        Swal.fire(\"Error resetting password. Please try again.\");\r\n      }\r\n    } else {\r\n      Swal.fire(\"Please provide your email.\");\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Mycontext.Provider value={{SignupFirebase,SignInfirebase, ForgetPassword,}}\r\n    >\r\n      {children}\r\n    </Mycontext.Provider>\r\n  );\r\n};\r\n\r\nexport default Myprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}