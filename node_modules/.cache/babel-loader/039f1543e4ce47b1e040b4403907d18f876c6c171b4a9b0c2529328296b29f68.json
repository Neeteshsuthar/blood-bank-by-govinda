{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { collection, addDoc, getDocs, query, where,  } from \"firebase/firestore\";\n// import '../styles/home.css'\n// import { db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import { Helmet } from \"react-helmet\";\n\n//   const HomePage = () => {\n//   const [bloodGroup, setBloodGroup]  = useState(\"\");\n//   const [city, setCity]              = useState(\"\");\n//   const [name, setName]              = useState(\"\");\n//   const [age, setAge]                = useState(\"\");\n//   const [ContactNo,setContactNo]     =useState('')\n//   const [donors, setDonors]          = useState([]);\n\n//   const DonateButton = async () => {\n//     if (!name || !age || !bloodGroup || !city) {\n//       Swal.fire(\"Please fill all fields first!\");\n//       return;\n//     }\n\n//     try {\n//       // Adding a new donor to the BloodDoners collection\n//       await addDoc(collection(db, \"BloodDoners\"), {\n//         DonerName: name,\n//         DonerAge: age,\n//         DonerBloodGroup: bloodGroup,\n//         ContacNo: ContactNo,\n//         CityName: city,\n//       });\n//       Swal.fire(`Thank you ${name} for donating blood!`);\n\n//       // After donation, fetch the updated list of donors\n//       const donorsCollection = collection(db, \"BloodDoners\");\n//       const querySnapshot = await getDocs(donorsCollection);\n//       const updatedDonors = querySnapshot.docs.map((doc) => doc.data());\n//       setDonors(updatedDonors);  // Update donors state to reflect new data\n//     } catch (error) {\n//       console.error(\"Error saving data:\", error);\n//       Swal.fire(\"Error\", \"Failed to save data\", \"error\");\n//     }\n//   };\n\n//   const FindDoner = async () => {\n//     if (!bloodGroup || !city) {\n//       Swal.fire(\"Please Add City and Blood Group Both\");\n//       return;\n//     }\n\n//     try {\n//       const matchdata = query(\n//         collection(db, \"BloodDoners\"),\n//         where(\"DonerBloodGroup\", \"==\", bloodGroup),\n//         where(\"CityName\", \"==\", city)\n//       );\n\n//       const querySnapshot = await getDocs(matchdata);\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\n//         name: doc.data().DonerName,\n//         age: doc.data().DonerAge,\n//         bloodGroup: doc.data().DonerBloodGroup,\n//         contactNo: doc.data().ContacNo,\n//         city: doc.data().CityName,\n//       }));\n//       setDonors(matchedDonors);\n//       console.log(name,city,bloodGroup)\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//       Swal.fire(\"Error fetching data. Check console for details.\");\n//     }\n//   };\n\n//   return (\n//    <div className=\"homepage\">\n//     <Helmet><title>HomePage</title></Helmet>\n//     <div class=\"navbar\">\n//   <div class=\"navbar-brand\">Blood Bank</div>\n//   <div class=\"navbar-toggle\" onclick=\"toggleNavbar()\">\n//     <span></span>\n//     <span></span>\n//     <span></span>\n//   </div>\n//   <div class=\"navbar-links\">\n//     <a href=\"#\">Home</a>\n//     <a href=\"#\">Donate</a>\n//     <a href=\"#\">Find Donor</a>\n//     <a href=\"#\">Contact Us</a>\n//   </div>\n// </div>\n\n//       <h1 className=\"title\">Blood Bank</h1>\n//       <div className=\"form-container\">\n//         <input   type=\"text\"   placeholder=\"Enter Your Name\"   value={name} onChange={(e) => setName(e.target.value)} />\n//         <input   type=\"number\" placeholder=\"Enter Your Age\"    value={age}onChange={(e) => setAge(e.target.value)} />\n//         <input   type=\"text\"   placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)}/>\n//         <input   type=\"text\"   placeholder=\"Enter City\"        value={city} onChange={(e) => setCity(e.target.value)}/>\n//         <input   type=\"text\"   placeholder=\"Enter Contact NO\"  value={ContactNo} onChange={(e) => setContactNo(e.target.value)}/>\n\n//         <div className=\"button-group\">\n//           <button onClick={DonateButton} className=\"btn donate-btn\">\n//             Donate Blood\n//           </button>\n//           <button onClick={FindDoner} className=\"btn find-btn\">\n//             Find Donor\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"donor-list\">\n//   <h2>Donor List</h2>\n//   {donors.length > 0 ? (\n//     donors.map((doner, index) => (\n//       <div key={index} className=\"donor-card\">\n//         <p><strong>Name:</strong> {doner.name}</p>\n//         <p><strong>Age:</strong> {doner.age}</p>\n//         <p><strong>Contact No:</strong> {doner.contactNo}</p>\n//         <p><strong>Blood Group:</strong> {doner.bloodGroup}</p>\n//         <p><strong>City:</strong> {doner.city}</p>\n//       </div>\n//     ))\n//   ) : (\n//     <p>No donors found for the selected blood group and city.</p>\n//   )}\n// </div>\n\n//     </div>\n//   );\n// };\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, addDoc, getDocs, query, where,  } from \"firebase/firestore\";\r\n// import '../styles/home.css'\r\n// import { db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import { Helmet } from \"react-helmet\";\r\n\r\n\r\n\r\n//   const HomePage = () => {\r\n//   const [bloodGroup, setBloodGroup]  = useState(\"\");\r\n//   const [city, setCity]              = useState(\"\");\r\n//   const [name, setName]              = useState(\"\");\r\n//   const [age, setAge]                = useState(\"\");\r\n//   const [ContactNo,setContactNo]     =useState('')\r\n//   const [donors, setDonors]          = useState([]);\r\n\r\n//   const DonateButton = async () => {\r\n//     if (!name || !age || !bloodGroup || !city) {\r\n//       Swal.fire(\"Please fill all fields first!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Adding a new donor to the BloodDoners collection\r\n//       await addDoc(collection(db, \"BloodDoners\"), {\r\n//         DonerName: name,\r\n//         DonerAge: age,\r\n//         DonerBloodGroup: bloodGroup,\r\n//         ContacNo: ContactNo,\r\n//         CityName: city,\r\n//       });\r\n//       Swal.fire(`Thank you ${name} for donating blood!`);\r\n\r\n//       // After donation, fetch the updated list of donors\r\n//       const donorsCollection = collection(db, \"BloodDoners\");\r\n//       const querySnapshot = await getDocs(donorsCollection);\r\n//       const updatedDonors = querySnapshot.docs.map((doc) => doc.data());\r\n//       setDonors(updatedDonors);  // Update donors state to reflect new data\r\n//     } catch (error) {\r\n//       console.error(\"Error saving data:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to save data\", \"error\");\r\n//     }\r\n//   };\r\n\r\n\r\n//   const FindDoner = async () => {\r\n//     if (!bloodGroup || !city) {\r\n//       Swal.fire(\"Please Add City and Blood Group Both\");\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       const matchdata = query(\r\n//         collection(db, \"BloodDoners\"),\r\n//         where(\"DonerBloodGroup\", \"==\", bloodGroup),\r\n//         where(\"CityName\", \"==\", city)\r\n//       );\r\n  \r\n//       const querySnapshot = await getDocs(matchdata);\r\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n//         name: doc.data().DonerName,\r\n//         age: doc.data().DonerAge,\r\n//         bloodGroup: doc.data().DonerBloodGroup,\r\n//         contactNo: doc.data().ContacNo,\r\n//         city: doc.data().CityName,\r\n//       }));\r\n//       setDonors(matchedDonors);\r\n//       console.log(name,city,bloodGroup)\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//       Swal.fire(\"Error fetching data. Check console for details.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//    <div className=\"homepage\">\r\n//     <Helmet><title>HomePage</title></Helmet>\r\n//     <div class=\"navbar\">\r\n//   <div class=\"navbar-brand\">Blood Bank</div>\r\n//   <div class=\"navbar-toggle\" onclick=\"toggleNavbar()\">\r\n//     <span></span>\r\n//     <span></span>\r\n//     <span></span>\r\n//   </div>\r\n//   <div class=\"navbar-links\">\r\n//     <a href=\"#\">Home</a>\r\n//     <a href=\"#\">Donate</a>\r\n//     <a href=\"#\">Find Donor</a>\r\n//     <a href=\"#\">Contact Us</a>\r\n//   </div>\r\n// </div>\r\n\r\n//       <h1 className=\"title\">Blood Bank</h1>\r\n//       <div className=\"form-container\">\r\n//         <input   type=\"text\"   placeholder=\"Enter Your Name\"   value={name} onChange={(e) => setName(e.target.value)} />\r\n//         <input   type=\"number\" placeholder=\"Enter Your Age\"    value={age}onChange={(e) => setAge(e.target.value)} />\r\n//         <input   type=\"text\"   placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)}/>\r\n//         <input   type=\"text\"   placeholder=\"Enter City\"        value={city} onChange={(e) => setCity(e.target.value)}/>\r\n//         <input   type=\"text\"   placeholder=\"Enter Contact NO\"  value={ContactNo} onChange={(e) => setContactNo(e.target.value)}/>\r\n\r\n//         <div className=\"button-group\">\r\n//           <button onClick={DonateButton} className=\"btn donate-btn\">\r\n//             Donate Blood\r\n//           </button>\r\n//           <button onClick={FindDoner} className=\"btn find-btn\">\r\n//             Find Donor\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"donor-list\">\r\n//   <h2>Donor List</h2>\r\n//   {donors.length > 0 ? (\r\n//     donors.map((doner, index) => (\r\n//       <div key={index} className=\"donor-card\">\r\n//         <p><strong>Name:</strong> {doner.name}</p>\r\n//         <p><strong>Age:</strong> {doner.age}</p>\r\n//         <p><strong>Contact No:</strong> {doner.contactNo}</p>\r\n//         <p><strong>Blood Group:</strong> {doner.bloodGroup}</p>\r\n//         <p><strong>City:</strong> {doner.city}</p>\r\n//       </div>\r\n//     ))\r\n//   ) : (\r\n//     <p>No donors found for the selected blood group and city.</p>\r\n//   )}\r\n// </div>\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}