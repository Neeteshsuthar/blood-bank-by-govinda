{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\Herosec.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { collection, getDocs, query, where } from \"firebase/firestore\"; // Firestore functions\n// import '../styles/home.css';\n// import '../styles/hero.css';\n// import { db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import UserList from \"./UserList\";\n\n// const Hero = () => {\n//   const [selectedBloodGroup, setSelectedBloodGroup] = useState('');\n//   const [showReceivers, setShowReceivers] = useState(false);\n//   const [receivers, setReceivers] = useState([]); // State to store receivers fetched from Firestore\n\n//   // Handle blood group change\n//   const handleBloodGroupChange = (e) => {\n//     setSelectedBloodGroup(e.target.value);\n//     setShowReceivers(false); \n//   };\n\n//   // Handle Donate button click\n//   const handleDonateClick = async () => {\n//     if (selectedBloodGroup) {\n//       setShowReceivers(true); // Show the receivers' section\n//       // Fetch data from Firestore based on selected blood group\n//       try {\n//         const receiversQuery = query(\n//           collection(db, \"users\"), // Reference to 'users' collection in Firestore\n//           where(\"bloodGroup\", \"==\", selectedBloodGroup) // Filter by selected blood group\n//         );\n\n//         const querySnapshot = await getDocs(receiversQuery);\n//         const receiversData = querySnapshot.docs.map(doc => doc.data());\n\n//         setReceivers(receiversData); // Store the fetched data in state\n//       } catch (error) {\n//         console.error(\"Error fetching data: \", error);\n//         alert(\"Failed to fetch receivers data.\");\n//       }\n//     } else {\n//       alert(\"Please select a blood group first.\");\n//     }\n//   };\n\n//   return (\n//     <section className=\"hero\">\n//       <div className=\"hero-text\">\n//         <h2>Give Blood, Save Lives!</h2>\n//         <p>Your donation can make a difference to someone in need.</p>\n\n//         <div className=\"donate-section\">\n//           <h2>Donate Blood</h2>\n//           <p>Choose your blood group</p>\n\n//           <div className=\"dropdown-container\">\n//             <label htmlFor=\"blood-group\">Blood Group: </label>\n//             <select\n//               id=\"blood-group\"\n//               value={selectedBloodGroup}\n//               onChange={handleBloodGroupChange}\n//             >\n//               <option value=\"\">Select Blood Group</option>\n//               <option value=\"A+\">A+</option>\n//               <option value=\"A-\">A-</option>\n//               <option value=\"B+\">B+</option>\n//               <option value=\"B-\">B-</option>\n//               <option value=\"O+\">O+</option>\n//               <option value=\"O-\">O-</option>\n//               <option value=\"AB+\">AB+</option>\n//               <option value=\"AB-\">AB-</option>\n//             </select>\n//           </div>\n\n//           <button className=\"cta-btn\" onClick={handleDonateClick}>Donate Now</button>\n//           <button className=\"cta-btn\">Find Donors</button>\n//         </div>\n\n//         {/* Conditionally render receivers based on selected blood group */}\n//         {showReceivers && receivers.length > 0 && (\n//           <div className=\"receivers\">\n//            {receivers.map((receiver, index) => (\n//   <div key={index} className=\"receiver-card\">\n//     <UserList/>\n//     <h3>{receiver.name}</h3>\n//     <p>Blood Group: {receiver.bloodGroup}</p>\n//     <p>Location: {receiver.location}</p>\n//   </div>\n// ))}\n\n//           </div>\n//         )}\n\n//         {/* Show a message if no receivers are found */}\n//         {showReceivers && receivers.length === 0 && (\n//          Swal.fire('No User Found of This Group')\n//         )}\n//       </div>\n//     </section>\n//   );\n// };\nimport React, { useState } from \"react\";\nimport \"../styles/home.css\";\nimport \"../styles/hero.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const [slectBloodGroup, setSelectedBloodGroup] = useState(\"\");\n  const HandleGroupChange = e => {\n    setSelectedBloodGroup(e.target.value); // Update state correctly on change\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Give Blood, Save Lives!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your donation can make a difference to someone in need.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donate-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Donate Blood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose your blood group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"blood-group\",\n            children: \"Blood Group: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"blood-group\",\n            value: slectBloodGroup,\n            onChange: HandleGroupChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"A+\",\n              children: \"A+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"A-\",\n              children: \"A-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"B+\",\n              children: \"B+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"B-\",\n              children: \"B-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"O+\",\n              children: \"O+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"O-\",\n              children: \"O-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AB+\",\n              children: \"AB+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AB-\",\n              children: \"AB-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-btn\",\n        children: \"Donate Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cta-btn\",\n        children: \"Find Donors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"lCLg5xLsfy43NE94gXBU+VtqqEc=\");\n_c = Hero;\nexport default Hero;\nexport { Hero };\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hero","_s","slectBloodGroup","setSelectedBloodGroup","HandleGroupChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/Herosec.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, getDocs, query, where } from \"firebase/firestore\"; // Firestore functions\r\n// import '../styles/home.css';\r\n// import '../styles/hero.css';\r\n// import { db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import UserList from \"./UserList\";\r\n\r\n// const Hero = () => {\r\n//   const [selectedBloodGroup, setSelectedBloodGroup] = useState('');\r\n//   const [showReceivers, setShowReceivers] = useState(false);\r\n//   const [receivers, setReceivers] = useState([]); // State to store receivers fetched from Firestore\r\n\r\n//   // Handle blood group change\r\n//   const handleBloodGroupChange = (e) => {\r\n//     setSelectedBloodGroup(e.target.value);\r\n//     setShowReceivers(false); \r\n//   };\r\n\r\n \r\n//   // Handle Donate button click\r\n//   const handleDonateClick = async () => {\r\n//     if (selectedBloodGroup) {\r\n//       setShowReceivers(true); // Show the receivers' section\r\n//       // Fetch data from Firestore based on selected blood group\r\n//       try {\r\n//         const receiversQuery = query(\r\n//           collection(db, \"users\"), // Reference to 'users' collection in Firestore\r\n//           where(\"bloodGroup\", \"==\", selectedBloodGroup) // Filter by selected blood group\r\n//         );\r\n\r\n//         const querySnapshot = await getDocs(receiversQuery);\r\n//         const receiversData = querySnapshot.docs.map(doc => doc.data());\r\n        \r\n//         setReceivers(receiversData); // Store the fetched data in state\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data: \", error);\r\n//         alert(\"Failed to fetch receivers data.\");\r\n//       }\r\n//     } else {\r\n//       alert(\"Please select a blood group first.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <section className=\"hero\">\r\n//       <div className=\"hero-text\">\r\n//         <h2>Give Blood, Save Lives!</h2>\r\n//         <p>Your donation can make a difference to someone in need.</p>\r\n        \r\n//         <div className=\"donate-section\">\r\n//           <h2>Donate Blood</h2>\r\n//           <p>Choose your blood group</p>\r\n\r\n//           <div className=\"dropdown-container\">\r\n//             <label htmlFor=\"blood-group\">Blood Group: </label>\r\n//             <select\r\n//               id=\"blood-group\"\r\n//               value={selectedBloodGroup}\r\n//               onChange={handleBloodGroupChange}\r\n//             >\r\n//               <option value=\"\">Select Blood Group</option>\r\n//               <option value=\"A+\">A+</option>\r\n//               <option value=\"A-\">A-</option>\r\n//               <option value=\"B+\">B+</option>\r\n//               <option value=\"B-\">B-</option>\r\n//               <option value=\"O+\">O+</option>\r\n//               <option value=\"O-\">O-</option>\r\n//               <option value=\"AB+\">AB+</option>\r\n//               <option value=\"AB-\">AB-</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <button className=\"cta-btn\" onClick={handleDonateClick}>Donate Now</button>\r\n//           <button className=\"cta-btn\">Find Donors</button>\r\n//         </div>\r\n\r\n//         {/* Conditionally render receivers based on selected blood group */}\r\n//         {showReceivers && receivers.length > 0 && (\r\n//           <div className=\"receivers\">\r\n//            {receivers.map((receiver, index) => (\r\n//   <div key={index} className=\"receiver-card\">\r\n//     <UserList/>\r\n//     <h3>{receiver.name}</h3>\r\n//     <p>Blood Group: {receiver.bloodGroup}</p>\r\n//     <p>Location: {receiver.location}</p>\r\n//   </div>\r\n// ))}\r\n\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Show a message if no receivers are found */}\r\n//         {showReceivers && receivers.length === 0 && (\r\n//          Swal.fire('No User Found of This Group')\r\n//         )}\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\nimport React, { useState } from \"react\";\r\nimport \"../styles/home.css\";\r\nimport \"../styles/hero.css\";\r\n\r\nconst Hero = () => {\r\n  const [slectBloodGroup, setSelectedBloodGroup] = useState(\"\");\r\n  \r\n  const HandleGroupChange = (e) => {\r\n    setSelectedBloodGroup(e.target.value); // Update state correctly on change\r\n  };\r\n\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"hero-text\">\r\n        <h2>Give Blood, Save Lives!</h2>\r\n        <p>Your donation can make a difference to someone in need.</p>\r\n        <div className=\"donate-section\">\r\n          <h2>Donate Blood</h2>\r\n          <p>Choose your blood group</p>\r\n          <div className=\"dropdown-container\">\r\n            <label htmlFor=\"blood-group\">Blood Group: </label>\r\n            <select\r\n              id=\"blood-group\"\r\n              value={slectBloodGroup}\r\n              onChange={HandleGroupChange}\r\n            >\r\n              <option value=\"A+\">A+</option>\r\n              <option value=\"A-\">A-</option>\r\n              <option value=\"B+\">B+</option>\r\n              <option value=\"B-\">B-</option>\r\n              <option value=\"O+\">O+</option>\r\n              <option value=\"O-\">O-</option>\r\n              <option value=\"AB+\">AB+</option>\r\n              <option value=\"AB-\">AB-</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button className=\"cta-btn\">Donate Now</button>\r\n        <button className=\"cta-btn\">Find Donors</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n\r\n\r\n\r\nexport {Hero};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}