{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\n// import { auth, db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import { Helmet } from \"react-helmet\";\n// import \"../styles/home.css\";\n// import { signOut } from \"firebase/auth\";\n\n// const HomePage = () => {\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [age, setAge] = useState(\"\");\n//   const [ContactNo, setContactNo] = useState(\"\");\n//   const [donors, setDonors] = useState([]);\n//   const DonateButton = async () => {\n//     if (!name || !bloodGroup || !city || !ContactNo) {\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\n//       return;\n//     }\n\n//     try {\n//       await addDoc(collection(db, \"BloodDoners\"), {\n//         DonerName: name,\n//         DonerBloodGroup: bloodGroup,\n//         CityName: city,\n//         ContactNo: ContactNo,\n//       });\n\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\n//       setName(\"\");\n//       setBloodGroup(\"\");\n//       setCity(\"\");\n//       setContactNo(\"\");\n//     } catch (error) {\n//       console.error(\"Error donating blood:\", error.message);\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\n//     }\n//   };\n//     const FindDoner = async () => {\n//     if (!bloodGroup || !city) {\n//       Swal.fire(\"Please add both city and blood group\");\n//       return;\n//     }\n\n//     try {\n//       const filters = [];\n//       if (bloodGroup) {\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n//       }\n//       if (city) {\n//      filters.push(where(\"CityName\", \"==\", city));\n//       }\n\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n//       const querySnapshot = await getDocs(matchData);\n\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\n//         id: doc.id,\n//         DonerName: doc.data().DonerName,\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\n//         CityName: doc.data().CityName,\n//         ContactNo: doc.data().ContactNo,\n//       }));\n\n//       if (matchedDonors.length === 0) {\n//         Swal.fire(\"No donors found matching your criteria.\");\n//       } else {\n//         setDonors(matchedDonors);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching donors:\", error);\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n//     }\n//   };\n\n//   // Logout Function\n//   const LogOut = async () => {\n//     try {\n//       await signOut(auth);\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Error during logout:\", error);\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n//     }\n//   };\n\n//   return (\n//    \n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { auth, db } from \"../init-firebase\";\nimport Swal from \"sweetalert2\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nconst HomePage = () => {\n  _s();\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [ContactNo, setContactNo] = useState(\"\");\n  const [donors, setDonors] = useState([]);\n  const AddDonate = async (donateGroups, name, city, contactNo) => {\n    onAuthStateChanged(auth, async user => {\n      if (user) {\n        const currentProfileUser = user.email;\n        const querySnapshot = await getDocs(collection(db, \"users\"));\n        querySnapshot.forEach(async doc => {\n          const userData = doc.data();\n          if (currentProfileUser === userData.Email) {\n            // Check if the user has already donated\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\n            const donorSnapshot = await getDocs(q);\n            if (donorSnapshot.empty) {\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\n                Swal.fire(\"Please Select Your Blood Group !\");\n              } else if (name === \"\" || city === \"\" || contactNo === \"\") {\n                Swal.fire(\"Please fill in all fields before donating.\");\n              } else {\n                try {\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\n                    Name: userData.Name,\n                    Email: userData.Email,\n                    PhoneNo: userData.PhoneNo,\n                    Age: userData.Age,\n                    UserType: userData.UserType,\n                    City: city,\n                    ImageUrl: userData.ImageUrl,\n                    BloodGroup: donateGroups\n                  });\n                  console.log(\"Document written with ID: \", docRef.id);\n                  Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\n                } catch (e) {\n                  console.error(\"Error adding document: \", e);\n                }\n              }\n            } else {\n              Swal.fire(\"You're Already a Donor!\");\n            }\n          }\n        });\n      } else {\n        console.log(\"User Not Logged In, Please Log In!\");\n      }\n    });\n  };\n  const DonateButton = async () => {\n    if (!name || !bloodGroup || !city || !ContactNo) {\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\n      return;\n    }\n\n    // Call AddDonate to add the donation details\n    AddDonate(bloodGroup, name, city, ContactNo);\n    try {\n      await addDoc(collection(db, \"BloodDoners\"), {\n        DonerName: name,\n        DonerBloodGroup: bloodGroup,\n        CityName: city,\n        ContactNo: ContactNo\n      });\n      Swal.fire(`Thank you ${name} for your blood donation!`);\n      setName(\"\");\n      setBloodGroup(\"\");\n      setCity(\"\");\n      setContactNo(\"\");\n    } catch (error) {\n      console.error(\"Error donating blood:\", error.message);\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\n    }\n  };\n  const FindDoner = async () => {\n    if (!bloodGroup || !city) {\n      Swal.fire(\"Please add both city and blood group\");\n      return;\n    }\n    try {\n      const filters = [];\n      if (bloodGroup) {\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n      }\n      if (city) {\n        filters.push(where(\"CityName\", \"==\", city));\n      }\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n      const querySnapshot = await getDocs(matchData);\n      const matchedDonors = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        DonerName: doc.data().DonerName,\n        DonerBloodGroup: doc.data().DonerBloodGroup,\n        CityName: doc.data().CityName,\n        ContactNo: doc.data().ContactNo\n      }));\n      if (matchedDonors.length === 0) {\n        Swal.fire(\"No donors found matching your criteria.\");\n      } else {\n        setDonors(matchedDonors);\n      }\n    } catch (error) {\n      console.error(\"Error fetching donors:\", error);\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n    }\n  };\n  // LogOut Function\n  const LogOut = async () => {\n    try {\n      await signOut(auth);\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n    }\n  };\n  return {/* <div className=\"homepage\">\r\n          //       <Helmet>\r\n          //         <title>HomePage</title>\r\n          //       </Helmet>\r\n          //       <div className=\"navbar\">\r\n          //         <div className=\"navbar-brand\">Blood Bank</div>\r\n          //         <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\r\n          //           <span></span>\r\n          //           <span></span>\r\n          //           <span></span>\r\n          //         </div>\r\n          //         <div className=\"navbar-links\">\r\n          //           <a href=\"/home\">Home</a>\r\n          //           <a href=\"/profile\">Profile</a>\r\n          //           <button onClick={LogOut}>Logout</button>\r\n          //           <a href=\"/contact\">Contact Us</a>\r\n          //         </div>\r\n          //       </div>\r\n          \n          //       <h1 className=\"title\">Blood Bank</h1>\r\n          //       <div className=\"form-container\">\r\n          //         <input\r\n          //           type=\"text\" placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)}  />\r\n          //         <input type=\"number\"  placeholder=\"Enter Your Age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n          //         <input  type=\"text\" placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)} />\r\n          //         <input  type=\"text\" placeholder=\"Enter City\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n          //         <input type=\"text\" placeholder=\"Enter Contact NO\"value={ContactNo}onChange={(e) => setContactNo(e.target.value)} />\r\n          //           <div className=\"button-group\">\r\n          //           <button onClick={DonateButton} className=\"btn donate-btn\">\r\n          //             Donate Blood\r\n          //           </button>\r\n          //           <button onClick={FindDoner} className=\"btn find-btn\">\r\n          //             Find Donor\r\n          //           </button>\r\n          //         </div>\r\n          //       </div>\r\n          \n          //       <div className=\"donor-list\">\r\n          //         <h2>Donor List</h2>\r\n          //         {donors.length > 0 ? (\r\n          //           donors.map((donor, index) => (\r\n          //             <div key={index} className=\"donor-card\">\r\n          //               <p>\r\n          //                 <strong>Name:</strong> {donor.DonerName} </p>\r\n          //               <p><strong>Blood Group:</strong> {donor.DonerBloodGroup} </p>\r\n          //               <p><strong>City:</strong> {donor.CityName} </p>\r\n          //               <p><strong>Contact No:</strong> {donor.ContactNo}</p>\r\n          //             </div>\r\n          //           ))\r\n          //         ) : (\r\n          //           <p>No donors found</p>\r\n          //         )}\r\n          //       </div>\r\n          //       <footer className=\"footer\">\r\n          //         <div className=\"footer-container\">\r\n          //           <p>&copy; {new Date().getFullYear()} Blood Bank | All Rights Reserved</p>\r\n          //           <p>\r\n          //           </p>\r\n          //         </div>\r\n          //       </footer>\r\n          //     </div> */};\n};\n_s(HomePage, \"K3a5V80S5fnStqqhClu1oniPjpA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","query","where","auth","db","Swal","onAuthStateChanged","signOut","HomePage","_s","bloodGroup","setBloodGroup","city","setCity","name","setName","age","setAge","ContactNo","setContactNo","donors","setDonors","AddDonate","donateGroups","contactNo","user","currentProfileUser","email","querySnapshot","forEach","doc","userData","data","Email","q","donorSnapshot","empty","fire","docRef","Name","PhoneNo","Age","UserType","City","ImageUrl","BloodGroup","console","log","id","e","error","DonateButton","DonerName","DonerBloodGroup","CityName","message","FindDoner","filters","push","matchData","matchedDonors","docs","map","length","LogOut","window","location","href","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n// import { auth, db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import \"../styles/home.css\";\r\n// import { signOut } from \"firebase/auth\";\r\n\r\n// const HomePage = () => {\r\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [age, setAge] = useState(\"\");\r\n//   const [ContactNo, setContactNo] = useState(\"\");\r\n//   const [donors, setDonors] = useState([]);\r\n//   const DonateButton = async () => {\r\n//     if (!name || !bloodGroup || !city || !ContactNo) {\r\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await addDoc(collection(db, \"BloodDoners\"), {\r\n//         DonerName: name,\r\n//         DonerBloodGroup: bloodGroup,\r\n//         CityName: city,\r\n//         ContactNo: ContactNo,\r\n//       });\r\n\r\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\r\n//       setName(\"\");\r\n//       setBloodGroup(\"\");\r\n//       setCity(\"\");\r\n//       setContactNo(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error donating blood:\", error.message);\r\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n//     }\r\n//   };\r\n//     const FindDoner = async () => {\r\n//     if (!bloodGroup || !city) {\r\n//       Swal.fire(\"Please add both city and blood group\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const filters = [];\r\n//       if (bloodGroup) {\r\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n//       }\r\n//       if (city) {\r\n//      filters.push(where(\"CityName\", \"==\", city));\r\n//       }\r\n\r\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n//       const querySnapshot = await getDocs(matchData);\r\n\r\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         DonerName: doc.data().DonerName,\r\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\r\n//         CityName: doc.data().CityName,\r\n//         ContactNo: doc.data().ContactNo,\r\n//       }));\r\n\r\n//       if (matchedDonors.length === 0) {\r\n//         Swal.fire(\"No donors found matching your criteria.\");\r\n//       } else {\r\n//         setDonors(matchedDonors);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching donors:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   // Logout Function\r\n//   const LogOut = async () => {\r\n//     try {\r\n//       await signOut(auth);\r\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Error during logout:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//    \r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"../init-firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\nconst HomePage = () => {\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [ContactNo, setContactNo] = useState(\"\");\r\n  const [donors, setDonors] = useState([]);\r\n\r\n  const AddDonate = async (donateGroups, name, city, contactNo) => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        const currentProfileUser = user.email;\r\n\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        querySnapshot.forEach(async (doc) => {\r\n          const userData = doc.data();\r\n\r\n          if (currentProfileUser === userData.Email) {\r\n            // Check if the user has already donated\r\n            const q = query(collection(db, \"Donors\"), where(\"Email\", \"==\", userData.Email));\r\n            const donorSnapshot = await getDocs(q);\r\n\r\n            if (donorSnapshot.empty) {\r\n              if (donateGroups === \"\" || donateGroups === \"-- Select Blood Group --\") {\r\n                Swal.fire(\"Please Select Your Blood Group !\");\r\n              } else if (name === \"\" || city === \"\" || contactNo === \"\") {\r\n                Swal.fire(\"Please fill in all fields before donating.\");\r\n              } else {\r\n                try {\r\n                  const docRef = await addDoc(collection(db, \"Donors\"), {\r\n                    Name: userData.Name,\r\n                    Email: userData.Email,\r\n                    PhoneNo: userData.PhoneNo,\r\n                    Age: userData.Age,\r\n                    UserType: userData.UserType,\r\n                    City: city,\r\n                    ImageUrl: userData.ImageUrl,\r\n                    BloodGroup: donateGroups,\r\n                  });\r\n                  console.log(\"Document written with ID: \", docRef.id);\r\n                  Swal.fire(`Thank you ${userData.Name} for your blood donation!`);\r\n                } catch (e) {\r\n                  console.error(\"Error adding document: \", e);\r\n                }\r\n              }\r\n            } else {\r\n              Swal.fire(\"You're Already a Donor!\");\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"User Not Logged In, Please Log In!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const DonateButton = async () => {\r\n    if (!name || !bloodGroup || !city || !ContactNo) {\r\n      Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n      return;\r\n    }\r\n\r\n    // Call AddDonate to add the donation details\r\n    AddDonate(bloodGroup, name, city, ContactNo);\r\n\r\n    try {\r\n      await addDoc(collection(db, \"BloodDoners\"), {\r\n        DonerName: name,\r\n        DonerBloodGroup: bloodGroup,\r\n        CityName: city,\r\n        ContactNo: ContactNo,\r\n      });\r\n\r\n      Swal.fire(`Thank you ${name} for your blood donation!`);\r\n      setName(\"\");\r\n      setBloodGroup(\"\");\r\n      setCity(\"\");\r\n      setContactNo(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error donating blood:\", error.message);\r\n      Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const FindDoner = async () => {\r\n    if (!bloodGroup || !city) {\r\n      Swal.fire(\"Please add both city and blood group\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const filters = [];\r\n      if (bloodGroup) {\r\n        filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n      }\r\n      if (city) {\r\n        filters.push(where(\"CityName\", \"==\", city));\r\n      }\r\n\r\n      const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n      const querySnapshot = await getDocs(matchData);\r\n\r\n      const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        DonerName: doc.data().DonerName,\r\n        DonerBloodGroup: doc.data().DonerBloodGroup,\r\n        CityName: doc.data().CityName,\r\n        ContactNo: doc.data().ContactNo,\r\n      }));\r\n\r\n      if (matchedDonors.length === 0) {\r\n        Swal.fire(\"No donors found matching your criteria.\");\r\n      } else {\r\n        setDonors(matchedDonors);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching donors:\", error);\r\n      Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n    }\r\n  };\r\n  // LogOut Function\r\n  const LogOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n      window.location.href = \"/login\";\r\n    } catch (error) {\r\n      console.error(\"Error during logout:\", error);\r\n      Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n{/* <div className=\"homepage\">\r\n//       <Helmet>\r\n//         <title>HomePage</title>\r\n//       </Helmet>\r\n//       <div className=\"navbar\">\r\n//         <div className=\"navbar-brand\">Blood Bank</div>\r\n//         <div className=\"navbar-toggle\" onClick=\"toggleNavbar()\">\r\n//           <span></span>\r\n//           <span></span>\r\n//           <span></span>\r\n//         </div>\r\n//         <div className=\"navbar-links\">\r\n//           <a href=\"/home\">Home</a>\r\n//           <a href=\"/profile\">Profile</a>\r\n//           <button onClick={LogOut}>Logout</button>\r\n//           <a href=\"/contact\">Contact Us</a>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <h1 className=\"title\">Blood Bank</h1>\r\n//       <div className=\"form-container\">\r\n//         <input\r\n//           type=\"text\" placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)}  />\r\n//         <input type=\"number\"  placeholder=\"Enter Your Age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n//         <input  type=\"text\" placeholder=\"Enter Blood Group\" value={bloodGroup} onChange={(e) => setBloodGroup(e.target.value)} />\r\n//         <input  type=\"text\" placeholder=\"Enter City\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n//         <input type=\"text\" placeholder=\"Enter Contact NO\"value={ContactNo}onChange={(e) => setContactNo(e.target.value)} />\r\n//           <div className=\"button-group\">\r\n//           <button onClick={DonateButton} className=\"btn donate-btn\">\r\n//             Donate Blood\r\n//           </button>\r\n//           <button onClick={FindDoner} className=\"btn find-btn\">\r\n//             Find Donor\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"donor-list\">\r\n//         <h2>Donor List</h2>\r\n//         {donors.length > 0 ? (\r\n//           donors.map((donor, index) => (\r\n//             <div key={index} className=\"donor-card\">\r\n//               <p>\r\n//                 <strong>Name:</strong> {donor.DonerName} </p>\r\n//               <p><strong>Blood Group:</strong> {donor.DonerBloodGroup} </p>\r\n//               <p><strong>City:</strong> {donor.CityName} </p>\r\n//               <p><strong>Contact No:</strong> {donor.ContactNo}</p>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p>No donors found</p>\r\n//         )}\r\n//       </div>\r\n//       <footer className=\"footer\">\r\n//         <div className=\"footer-container\">\r\n//           <p>&copy; {new Date().getFullYear()} Blood Bank | All Rights Reserved</p>\r\n//           <p>\r\n//           </p>\r\n//         </div>\r\n//       </footer>\r\n//     </div> */}\r\n  )}\r\n    \r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}