{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\test project\\\\myapp\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\n// import { auth, db } from \"../init-firebase\";\n// import Swal from \"sweetalert2\";\n// import { Helmet } from \"react-helmet\";\n// import \"../styles/home.css\";\n// import { signOut } from \"firebase/auth\";\n\n// const HomePage = () => {\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [age, setAge] = useState(\"\");\n//   const [ContactNo, setContactNo] = useState(\"\");\n//   const [donors, setDonors] = useState([]);\n//   const DonateButton = async () => {\n//     if (!name || !bloodGroup || !city || !ContactNo) {\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\n//       return;\n//     }\n\n//     try {\n//       await addDoc(collection(db, \"BloodDoners\"), {\n//         DonerName: name,\n//         DonerBloodGroup: bloodGroup,\n//         CityName: city,\n//         ContactNo: ContactNo,\n//       });\n\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\n//       setName(\"\");\n//       setBloodGroup(\"\");\n//       setCity(\"\");\n//       setContactNo(\"\");\n//     } catch (error) {\n//       console.error(\"Error donating blood:\", error.message);\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\n//     }\n//   };\n//     const FindDoner = async () => {\n//     if (!bloodGroup || !city) {\n//       Swal.fire(\"Please add both city and blood group\");\n//       return;\n//     }\n\n//     try {\n//       const filters = [];\n//       if (bloodGroup) {\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\n//       }\n//       if (city) {\n//      filters.push(where(\"CityName\", \"==\", city));\n//       }\n\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\n//       const querySnapshot = await getDocs(matchData);\n\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\n//         id: doc.id,\n//         DonerName: doc.data().DonerName,\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\n//         CityName: doc.data().CityName,\n//         ContactNo: doc.data().ContactNo,\n//       }));\n\n//       if (matchedDonors.length === 0) {\n//         Swal.fire(\"No donors found matching your criteria.\");\n//       } else {\n//         setDonors(matchedDonors);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching donors:\", error);\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\n//     }\n//   };\n\n//   // Logout Function\n//   const LogOut = async () => {\n//     try {\n//       await signOut(auth);\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Error during logout:\", error);\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\n//     }\n//   };\n\n//   return (\n//    \n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { auth, db } from \"../init-firebase\";\nimport Swal from \"sweetalert2\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { Helmet } from \"react-helmet\";\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [userData, setUserData] = useState({\n    Name: \"\",\n    Age: \"\",\n    Contact: \"\"\n  });\n\n  // Fetch the user data from Firestore\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = auth.currentUser;\n        if (user) {\n          const q = query(collection(db, \"Users\"), where(\"Email\", \"==\", user.email));\n          const querySnapshot = await getDocs(q);\n          querySnapshot.forEach(doc => {\n            const data = doc.data();\n            setUserData({\n              Name: data.Name,\n              Age: data.Age,\n              Contact: data.Contact\n            });\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Function to handle Blood Donation\n  const handleDonate = async () => {\n    if (!bloodGroup) {\n      Swal.fire(\"Please enter your blood group!\");\n      return;\n    }\n    try {\n      // Save the data to Firestore\n      await addDoc(collection(db, \"BloodDonors\"), {\n        Name: userData.Name,\n        Age: userData.Age,\n        Contact: userData.Contact,\n        BloodGroup: bloodGroup,\n        DonatedAt: new Date()\n      });\n      Swal.fire(\"Thank you for donating!\", \"Your data has been saved.\", \"success\");\n      setBloodGroup(\"\");\n    } catch (error) {\n      console.error(\"Error saving donation data:\", error);\n      Swal.fire(\"Error\", \"Failed to save your donation data.\", \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 text-center\",\n        children: \"Donate Blood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-medium\",\n          children: \"Blood Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full px-4 py-2 mt-2 border border-gray-300 rounded-lg\",\n          placeholder: \"Enter your blood group (e.g., A+, B-)\",\n          value: bloodGroup,\n          onChange: e => setBloodGroup(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg\",\n        onClick: handleDonate,\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"xOGpiKqJ6Zv24fYYDbylGtnSZGU=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","query","where","auth","db","Swal","onAuthStateChanged","signOut","Helmet","jsxDEV","_jsxDEV","HomePage","_s","bloodGroup","setBloodGroup","userData","setUserData","Name","Age","Contact","fetchUserData","user","currentUser","q","email","querySnapshot","forEach","doc","data","error","console","handleDonate","fire","BloodGroup","DonatedAt","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Desktop/test project/myapp/src/components/home.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\n// import { auth, db } from \"../init-firebase\";\r\n// import Swal from \"sweetalert2\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import \"../styles/home.css\";\r\n// import { signOut } from \"firebase/auth\";\r\n\r\n// const HomePage = () => {\r\n//   const [bloodGroup, setBloodGroup] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [age, setAge] = useState(\"\");\r\n//   const [ContactNo, setContactNo] = useState(\"\");\r\n//   const [donors, setDonors] = useState([]);\r\n//   const DonateButton = async () => {\r\n//     if (!name || !bloodGroup || !city || !ContactNo) {\r\n//       Swal.fire(\"Please fill in all the fields before donating blood.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       await addDoc(collection(db, \"BloodDoners\"), {\r\n//         DonerName: name,\r\n//         DonerBloodGroup: bloodGroup,\r\n//         CityName: city,\r\n//         ContactNo: ContactNo,\r\n//       });\r\n\r\n//       Swal.fire(`Thank you ${name} for your blood donation!`);\r\n//       setName(\"\");\r\n//       setBloodGroup(\"\");\r\n//       setCity(\"\");\r\n//       setContactNo(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Error donating blood:\", error.message);\r\n//       Swal.fire(\"An error occurred while donating blood. Please try again.\");\r\n//     }\r\n//   };\r\n//     const FindDoner = async () => {\r\n//     if (!bloodGroup || !city) {\r\n//       Swal.fire(\"Please add both city and blood group\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const filters = [];\r\n//       if (bloodGroup) {\r\n//       filters.push(where(\"DonerBloodGroup\", \"==\", bloodGroup));\r\n//       }\r\n//       if (city) {\r\n//      filters.push(where(\"CityName\", \"==\", city));\r\n//       }\r\n\r\n//       const matchData = query(collection(db, \"BloodDoners\"), ...filters);\r\n//       const querySnapshot = await getDocs(matchData);\r\n\r\n//       const matchedDonors = querySnapshot.docs.map((doc) => ({\r\n//         id: doc.id,\r\n//         DonerName: doc.data().DonerName,\r\n//         DonerBloodGroup: doc.data().DonerBloodGroup,\r\n//         CityName: doc.data().CityName,\r\n//         ContactNo: doc.data().ContactNo,\r\n//       }));\r\n\r\n//       if (matchedDonors.length === 0) {\r\n//         Swal.fire(\"No donors found matching your criteria.\");\r\n//       } else {\r\n//         setDonors(matchedDonors);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching donors:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to fetch data\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   // Logout Function\r\n//   const LogOut = async () => {\r\n//     try {\r\n//       await signOut(auth);\r\n//       Swal.fire(\"Success\", \"You have been logged out.\", \"success\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Error during logout:\", error);\r\n//       Swal.fire(\"Error\", \"Failed to log out. Please try again.\", \"error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//    \r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { collection, addDoc, getDocs, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"../init-firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport '../styles/home.css'\r\n\r\nconst HomePage = () => {\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [userData, setUserData] = useState({\r\n    Name: \"\",\r\n    Age: \"\",\r\n    Contact: \"\",\r\n  });\r\n\r\n  // Fetch the user data from Firestore\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const user = auth.currentUser;\r\n        if (user) {\r\n          const q = query(collection(db, \"Users\"), where(\"Email\", \"==\", user.email));\r\n          const querySnapshot = await getDocs(q);\r\n\r\n          querySnapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            setUserData({\r\n              Name: data.Name,\r\n              Age: data.Age,\r\n              Contact: data.Contact,\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Function to handle Blood Donation\r\n  const handleDonate = async () => {\r\n    if (!bloodGroup) {\r\n      Swal.fire(\"Please enter your blood group!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Save the data to Firestore\r\n      await addDoc(collection(db, \"BloodDonors\"), {\r\n        Name: userData.Name,\r\n        Age: userData.Age,\r\n        Contact: userData.Contact,\r\n        BloodGroup: bloodGroup,\r\n        DonatedAt: new Date(),\r\n      });\r\n\r\n      Swal.fire(\"Thank you for donating!\", \"Your data has been saved.\", \"success\");\r\n      setBloodGroup(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error saving donation data:\", error);\r\n      Swal.fire(\"Error\", \"Failed to save your donation data.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100\">\r\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-md p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 text-center\">Donate Blood</h2>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-medium\">Blood Group</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full px-4 py-2 mt-2 border border-gray-300 rounded-lg\"\r\n            placeholder=\"Enter your blood group (e.g., A+, B-)\"\r\n            value={bloodGroup}\r\n            onChange={(e) => setBloodGroup(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className=\"w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg\"\r\n          onClick={handleDonate}\r\n        >\r\n          Donate\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );}\r\n    \r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}